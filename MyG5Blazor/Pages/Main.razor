@page "/main"
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System.Net.Http;
@using System.Text;
@using System;
@using System.Threading.Tasks;
@using MyG5Blazor.Data

@inject NavigationManager NavMan
@inject Costumer cst
@inject Transaction trans
@inject Menu menu
@inject Config config

<div class="main-panel bg-home">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <button class="hiddenbutton" style="font-size: 15px; margin-top: -40px;" @onclick="logout"></button>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>
            <form class="navbar-form">
                <div class="input-group no-border">
                    @if (false)
                    {<button type="submit" class="btn btn-white btn-round btn-just-icon" style="font-size: 15px; margin-top: -40px;">
                        ID
                    </button>
                    <button type="submit" class="btn btn-white btn-round btn-just-icon" style="font-size: 15px; margin-top: -40px;">
                        EN
                    </button>
                    }
                </div>
            </form>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <div class="centered-2">Silakan Tekan Menu yang Anda Inginkan</div>
                </div>

                <div class="col-md-6">
                    <div class="col-md-12" style="margin-top: 8%; text-align: center; flex-wrap: wrap;">
                        @*@if (stringMenu[0] == "0")
                        {
                            @if (MenuCount == 0)
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[0],apiURL[0],arrayTrans[0]))" src="../assets/image/Menu Utama/@AssetsPNG[0]" width=@WidthPNG height=@HeightPNG style=@strStyle[0]>
                            }
                            else
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[0],apiURL[0],arrayTrans[0]))" src="../assets/image/Menu Utama/@AssetsPNG[0]" width=@WidthPNG style=@strStyle[0]>
                            }
                            MenuCount += 1;
                        }
                        @if (stringMenu[1] == "0")
                        {
                            @if (MenuCount == 0)
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[1],apiURL[1],arrayTrans[1]))" src="../assets/image/Menu Utama/@AssetsPNG[1]" width=@WidthPNG height=@HeightPNG style=@strStyle[1]>
                            }
                            else
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[1],apiURL[1],arrayTrans[1]))" src="../assets/image/Menu Utama/@AssetsPNG[1]" width=@WidthPNG style=@strStyle[1]>
                            }
                            MenuCount += 1;
                        }
                        @if (stringMenu[2] == "0")
                        {
                            @if (MenuCount == 0)
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[2],apiURL[2],arrayTrans[2]))" src="../assets/image/Menu Utama/@AssetsPNG[2]" width=@WidthPNG height=@HeightPNG style=@strStyle[2]>
                            }
                            else
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[2],apiURL[2],arrayTrans[2]))" src="../assets/image/Menu Utama/@AssetsPNG[2]" width=@WidthPNG style=@strStyle[2]>
                            }
                            MenuCount += 1;
                        }
                        @if (stringMenu[3] == "0")
                        {
                            @if (MenuCount == 0)
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[3],apiURL[3],arrayTrans[3]))" src="../assets/image/Menu Utama/@AssetsPNG[3]" width=@WidthPNG height=@HeightPNG style=@strStyle[3]>
                            }
                            else
                            {
                                <img @onclick="@(()=>CheckStatus(hrefMenu[3],apiURL[3],arrayTrans[3]))" src="../assets/image/Menu Utama/@AssetsPNG[3]" width=@WidthPNG style=@strStyle[3]>
                            }
                            MenuCount += 1;
                        }*@

                        @foreach ((Menu.MainMenu mm, Int32 i) in menu._mainMenu.Select((mm, i) => (mm, i)))
                        {
                            @if (i == 0)
                            {
                                <img @onclick="@(()=>CheckStatus(mm._href,mm._url,mm._code))" src="../assets/image/Menu Utama/@mm._icon" width=@WidthPNG height=@HeightPNG >
                            }
                            else
                            {
                                <img @onclick="@(()=>CheckStatus(mm._href,mm._url,mm._code))" src="../assets/image/Menu Utama/@mm._icon" width=@WidthPNG >
                            }
                        }

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@if (IsLoading)
{
    <div id="myModal" class="modal">
        <div class="modal-blank">
            <img class="lds-spinner" src="../../assets/image/loader.gif">
            <p><br>Mohon tunggu</p>
            <p>proses sedang berlangsung...</p>
        </div>
    </div>
}
@if (isLogout)
{
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p class="text-body">Apakah anda ingin logout?</p>
                    <button @onclick="@(()=>NavMan.NavigateTo("/login"))" class="btn btn-light modal-button">Ya</button>
                    <button @onclick="@(()=>isLogout = false)" class="btn btn-danger modal-button">Batal</button>
                </div>
            </div>
        </div>
    </div>
}
@code
{
    private bool[] Menu = { true, true, false, true };
    private string[] stringMenu = { "1", "1", "1", "1", "1","1" };
    private List<string> listMenu = new List<string>();

    //@(()=>CheckStatus(hrefMenu[1],apiURL[1],arrayTrans[1]))
    private string[] hrefMenu = { "", "", "", "","","" };
    private string[] AssetsPNG = { "", "", "", "", "","" };
    private string[] arrayTrans = { "", "", "", "", "","" };

    private string WidthPNG = "35%";
    private string HeightPNG = "20%";

    private string[] StylePNG = { "margin-left: 10%;", "margin-left: 5%;", "margin-left: 10%; margin-top: 5%;", "margin-left: 5%; margin-top: 5%;" };
    private string[] strStyle = { "", "", "", "" };
    private int MenuCount = 0;
    private int intMenu = 0;

    private bool IsLoading = false;
    //private static string _myURL = "https://mygrapari.telkomsel.co.id/trilogi/";
    public string _myURL = string.Empty;
    private string[] apiURL = { "", "", "", "", "" };
    private string _termID = string.Empty;

    private int logutCount = 0;
    private bool isLogout = false;
    protected override async Task OnAfterRenderAsync(bool bFirstRender)
    {
        if (bFirstRender)
        {

            menu._menuPulsa.Clear();
            menu.terminalId = config.Read("Terminal", Config.PARAM_MACHINE);
            _myURL = config.Read("URL", Config.PARAM_DEFAULT_URL);
            menu.tokenId = config.Read("Terminal", Config.PARAM_TOKEN);
            config.usbEKTP = config.Read("EKTP", Config.PARAM_EKTP_USB).Substring(0,1);
            config.ektpType = config.Read("EKTP", Config.PARAM_EKTP_USB).Substring(1);
            config.usbCardReader = config.Read("Dispenser", Config.PARAM_DEVICE_CARD_READER_USB);
            //Console.WriteLine(_myURL);
            for (int i = 0; i < menu._mainMenu.Count(); i++)
            {
                hrefMenu[i] = menu._mainMenu[i]._href;
                AssetsPNG[i] = menu._mainMenu[i]._icon;
                arrayTrans[i] = menu._mainMenu[i]._code;
                apiURL[i] = menu._mainMenu[i]._url;
                stringMenu[i] = "0";
            }
            Switcher.DOWN("500", config.usbEKTP);
            Switcher.DOWN("3000", config.usbCardReader);
            cst.Clear();
            trans.ClearTransaction();
            CheckMenuStatus();

            intMenu = 0;
        }
    }

    private void CheckMenuStatus()
    {
        for (int i = 0; i < 4; i++)
        {
            if (stringMenu[i] == "0")
            {
                //Menu[i] = true;
                strStyle[i] = StylePNG[intMenu];
                intMenu += 1;
            }
        }
    }

    private async Task logout()
    {
        if (logutCount < 5)
        {
            logutCount += 1;
        }
        else
        {
            logutCount = 0;
            //System.Diagnostics.Process.Start("shutdown.exe", "-r -f -t 0");
            isLogout = true;
        }
    }

    private async Task CheckStatus(string strURL, string strAPIURL, string strTrans)
    {
        IsLoading = true;
        string myJson = "{ \"terminalId\": \"" + menu.terminalId + "\"" +
                "}";
        string myURL = _myURL + strAPIURL;
        OurUtility.Write_Log("= Get Menu Status Code", "step-action");
        //OurUtility.Write_Log("== Request API : " + myJson, "step-action");
        string strResult = await OurUtility.PostCallAPI(myURL, myJson, menu);
        ////OurUtility.Write_Log("== Response API : " + strResult, "step-action");
        if (strResult != "")
        {
            try
            {
                JObject jobjResult = JObject.Parse(strResult);
                if ((string)jobjResult["transaction"].SelectToken("statusCode") == "00")
                {
                    OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusCode") + " {Success}", "step-action");
                    trans.SetTransaction((string)jobjResult["config"].SelectToken("apiBuid"), (string)jobjResult["terminal"].SelectToken("terminalId"), strTrans);
                    config.Terminal((string)jobjResult["terminal"].SelectToken("terminalId"), (string)jobjResult["terminal"].SelectToken("terminalDesc"), (string)jobjResult["terminal"].SelectToken("terminalLocation"), (string)jobjResult["terminal"].SelectToken("area"), (string)jobjResult["terminal"].SelectToken("regional"), (string)jobjResult["terminal"].SelectToken("unitId"), (string)jobjResult["terminal"].SelectToken("unitName"));
                    config.ConfigIn((string)jobjResult["config"].SelectToken("menuConfigId"), (string)jobjResult["config"].SelectToken("maxRetryPerso"), (string)jobjResult["config"].SelectToken("tidEdc"), (string)jobjResult["config"].SelectToken("midEdc"), (string)jobjResult["config"].SelectToken("snEdc"), (string)jobjResult["config"].SelectToken("buid"), (string)jobjResult["config"].SelectToken("uid"), (string)jobjResult["config"].SelectToken("cardDispenser"), (string)jobjResult["config"].SelectToken("bahasa"), (string)jobjResult["config"].SelectToken("edcStatus"), (string)jobjResult["config"].SelectToken("cashStatus"));
                    trans.SetTransaction((string)jobjResult["transaction"].SelectToken("transactionId"));
                    OurUtility.Write_Log("== BUID : " + trans.buID + ", Terminal ID : " + trans.termID + ", Event : " + trans.jenisTrans + " {Success}", "step-action");

                    NavMan.NavigateTo(strURL);
                }
                else
                {
                    if ((string)jobjResult["transaction"].SelectToken("errorCode") != null)
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusDesc") + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusDesc");
                    }
                    else
                    {
                        string _statusDescSub = ((string)jobjResult["transaction"].SelectToken("statusDesc"));
                        string statusDescSub = _statusDescSub.Substring(0, _statusDescSub.IndexOf(":"));
                        OurUtility.Write_Log("== Status Code : " + statusDescSub + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusCode");
                    }
                    NavMan.NavigateTo("/error");
                }
            }
            catch (Exception ex)
            {
                trans.errorCode = strResult;
                OurUtility.Write_Log("== Error :" + ex.Message, "step-action");
                NavMan.NavigateTo("/error");
            }
        }
        else
        {
            trans.errorCode = strResult;
            OurUtility.Write_Log("== Error : Hit WebService {Error}", "step-action");
            NavMan.NavigateTo("/error");
        }
    }

}