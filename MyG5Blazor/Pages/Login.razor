@page "/login"
@inject IJSRuntime JSRuntime

@using System.IO.Ports 
@using MyG5Blazor.Data
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System.Net.Http;
@using System.Text;
@using System;
@using System.Threading.Tasks;
@using System.ComponentModel.DataAnnotations;

@inject EDC edc 
@inject Costumer cst
@inject NavigationManager NavMan
@inject Transaction trans
@inject Config config
@inject Menu menu
    <div class="bg-login">
        <div class="wrapper">
            <div class="main-panel">
                <!-- Navbar -->
                <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
                    <div class="container-fluid">
                        <div class="navbar-wrapper">
                            <div class="logo">
                                <img src="../assets/image/Logo/Logo_MyGraPARI.png" />
                            </div>
                            <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
                        </div>
                        <div class="navbar-form">
                            <div class="input-group no-border">
                                <button @onclick="@(() => NavigateTo("/iptest"))" class="btn btn-white btn-round btn-just-icon" style="font-size: 15px; margin-top: -40px;">IP</button>   
                            </div>
                        </div>
                    </div>
                </nav>
                <!-- End Navbar -->
                <div class="content">
                    <div class="container-fluid">
                            <div class="col-md-12" style="text-align: left;">
                                <div class="form-group3">
                                    <label class="teks-data">Terminal ID</label>
                                    <input type="text" class="input_box" @onclick="Inputfield1" id="input_field_1" placeholder="input your terminal ID" @bind="terminalId">
                                </div>
                            </div>
                            <div class="col-md-12" style="text-align: left;">
                                <div class="form-group3">
                                    <label class="teks-data">Username</label>
                                    <input type="text" class="input_box" @onclick="Inputfield2" id="input_field_2" placeholder="input your username" @bind="userName">
                                </div>
                            </div>
                            <div class="col-md-12" style="text-align: left;">
                                <div class="form-group3">
                                    <label class="teks-data">Password</label>
                                    <input type="password" class="input_box" @onclick="Inputfield3" id="input_field_3" placeholder="input your password" @bind="password">
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group3">
                                    <button style="margin-bottom:0;" class="btn btn-danger button-nps" @onclick="loginCheck">Login</button>
                                </div>

                                <div style="padding-left: 265px; padding-right: 285px; ">

                    @if (!isNumeric && !isUpper)
                    {

                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" value="q" @onclick="@(() => InsertCharField("q"))">q</button>
                                <button class="block" value="w" @onclick="@(() => InsertCharField("w"))">w</button>
                                <button class="block" value="e" @onclick="@(() => InsertCharField("e"))">e</button>
                                <button class="block" value="r" @onclick="@(() => InsertCharField("r"))">r</button>
                                <button class="block" value="t" @onclick="@(() => InsertCharField("t"))">t</button>
                                <button class="block" value="y" @onclick="@(() => InsertCharField("y"))">y</button>
                                <button class="block" value="u" @onclick="@(() => InsertCharField("u"))">u</button>
                                <button class="block" value="i" @onclick="@(() => InsertCharField("i"))">i</button>
                                <button class="block" value="o" @onclick="@(() => InsertCharField("o"))">o</button>
                                <button class="block" value="p" @onclick="@(() => InsertCharField("p"))">p</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" value="a" @onclick="@(() => InsertCharField("a"))">a</button>
                                <button class="block" value="s" @onclick="@(() => InsertCharField("s"))">s</button>
                                <button class="block" value="d" @onclick="@(() => InsertCharField("d"))">d</button>
                                <button class="block" value="f" @onclick="@(() => InsertCharField("f"))">f</button>
                                <button class="block" value="g" @onclick="@(() => InsertCharField("g"))">g</button>
                                <button class="block" value="h" @onclick="@(() => InsertCharField("h"))">h</button>
                                <button class="block" value="j" @onclick="@(() => InsertCharField("j"))">j</button>
                                <button class="block" value="k" @onclick="@(() => InsertCharField("k"))">k</button>
                                <button class="block" value="l" @onclick="@(() => InsertCharField("l"))">l</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" shift="" value="shift" @onclick="UpperToggle">Shift</button>
                                <button class="block" value="z" @onclick="@(() => InsertCharField("z"))">z</button>
                                <button class="block" value="x" @onclick="@(() => InsertCharField("x"))">x</button>
                                <button class="block" value="c" @onclick="@(() => InsertCharField("c"))">c</button>
                                <button class="block" value="v" @onclick="@(() => InsertCharField("v"))">v</button>
                                <button class="block" value="b" @onclick="@(() => InsertCharField("b"))">b</button>
                                <button class="block" value="n" @onclick="@(() => InsertCharField("n"))">n</button>
                                <button class="block" value="m" @onclick="@(() => InsertCharField("m"))">m</button>
                                <button class="block" del="" value="del" @onclick="DeleteCharField">Delete</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" num="" value="num" @onclick="NumericToggle">123</button>
                                <button class="block" space="" value="spasi" @onclick="@(() => InsertCharField("spasi"))">Spasi</button>
                            </div>
                        </div>
                    }
                    else if (isUpper)
                    {
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" value="q" @onclick="@(() => InsertCharField("Q"))">Q</button>
                                <button class="block" value="w" @onclick="@(() => InsertCharField("W"))">W</button>
                                <button class="block" value="e" @onclick="@(() => InsertCharField("E"))">E</button>
                                <button class="block" value="r" @onclick="@(() => InsertCharField("R"))">R</button>
                                <button class="block" value="t" @onclick="@(() => InsertCharField("T"))">T</button>
                                <button class="block" value="y" @onclick="@(() => InsertCharField("Y"))">Y</button>
                                <button class="block" value="u" @onclick="@(() => InsertCharField("U"))">U</button>
                                <button class="block" value="i" @onclick="@(() => InsertCharField("I"))">I</button>
                                <button class="block" value="o" @onclick="@(() => InsertCharField("O"))">O</button>
                                <button class="block" value="p" @onclick="@(() => InsertCharField("P"))">P</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" value="a" @onclick="@(() => InsertCharField("A"))">A</button>
                                <button class="block" value="s" @onclick="@(() => InsertCharField("S"))">S</button>
                                <button class="block" value="d" @onclick="@(() => InsertCharField("D"))">D</button>
                                <button class="block" value="f" @onclick="@(() => InsertCharField("F"))">F</button>
                                <button class="block" value="g" @onclick="@(() => InsertCharField("G"))">G</button>
                                <button class="block" value="h" @onclick="@(() => InsertCharField("H"))">H</button>
                                <button class="block" value="j" @onclick="@(() => InsertCharField("J"))">J</button>
                                <button class="block" value="k" @onclick="@(() => InsertCharField("K"))">K</button>
                                <button class="block" value="l" @onclick="@(() => InsertCharField("L"))">L</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" shift="" value="shift" @onclick="UpperToggle">Shift</button>
                                <button class="block" value="z" @onclick="@(() => InsertCharField("Z"))">Z</button>
                                <button class="block" value="x" @onclick="@(() => InsertCharField("X"))">X</button>
                                <button class="block" value="c" @onclick="@(() => InsertCharField("C"))">C</button>
                                <button class="block" value="v" @onclick="@(() => InsertCharField("V"))">V</button>
                                <button class="block" value="b" @onclick="@(() => InsertCharField("B"))">B</button>
                                <button class="block" value="n" @onclick="@(() => InsertCharField("N"))">N</button>
                                <button class="block" value="m" @onclick="@(() => InsertCharField("M"))">M</button>
                                <button class="block" del="" value="del" @onclick="DeleteCharField">Delete</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" num="" value="num" @onclick="NumericToggle">123</button>
                                <button class="block" space="" value="spasi" @onclick="@(() => InsertCharField("spasi"))">Spasi</button>
                            </div>
                        </div>
                    }
                    else if (isNumeric)
                    {
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" value="q" @onclick="@(() => InsertCharField("1"))">1</button>
                                <button class="block" value="w" @onclick="@(() => InsertCharField("2"))">2</button>
                                <button class="block" value="e" @onclick="@(() => InsertCharField("3"))">3</button>
                                <button class="block" value="r" @onclick="@(() => InsertCharField("4"))">4</button>
                                <button class="block" value="t" @onclick="@(() => InsertCharField("5"))">5</button>
                                <button class="block" value="y" @onclick="@(() => InsertCharField("6"))">6</button>
                                <button class="block" value="u" @onclick="@(() => InsertCharField("7"))">7</button>
                                <button class="block" value="i" @onclick="@(() => InsertCharField("8"))">8</button>
                                <button class="block" value="o" @onclick="@(() => InsertCharField("9"))">9</button>
                                <button class="block" value="p" @onclick="@(() => InsertCharField("0"))">0</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" value="a" @onclick="@(() => InsertCharField("-"))">-</button>
                                <button class="block" value="s" @onclick="@(() => InsertCharField("/"))">/</button>
                                <button class="block" value="d" @onclick="@(() => InsertCharField(":"))">:</button>
                                <button class="block" value="f" @onclick="@(() => InsertCharField(";"))">;</button>
                                <button class="block" value="g" @onclick="@(() => InsertCharField("("))">)</button>
                                <button class="block" value="h" @onclick="@(() => InsertCharField(")"))">)</button>
                                <button class="block" value="j" @onclick="@(() => InsertCharField("$"))">$</button>
                                <button class="block" value="k" @onclick="@(() => InsertCharField("&"))">&#38</button>
                                <button class="block" value="l" @onclick="@(() => InsertCharField("@"))">&#64</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" value="x" @onclick="@(() => InsertCharField("."))">.</button>
                                <button class="block" value="c" @onclick="@(() => InsertCharField(","))">,</button>
                                <button class="block" value="v" @onclick="@(() => InsertCharField("?"))">?</button>
                                <button class="block" value="b" @onclick="@(() => InsertCharField("!"))">!</button>
                                <button class="block" value="n" @onclick="@(() => InsertCharField("'"))">'</button>
                                <button class="block" value="m" @onclick="@(() => InsertCharField("\""))">"</button>
                                <button class="block" del="" value="del" @onclick="DeleteCharField">Delete</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center" style="margin-left: auto; margin-right: auto;">
                                <button class="block" num="" value="num" @onclick="NumericToggle">abc</button>
                                <button class="block" space="" value="spasi" @onclick="@(() => InsertCharField("spasi"))">Spasi</button>
                            </div>
                        </div>
                    }
        </div>
                                
                            </div>
                    </div>
                </div>
            </div>
        </div>

        @if (isAuthorized)
        {
            <div id="myModal" class="modal">
                <!-- Modal content -->
                <div class="modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <p class="text-body">Selamat Datang <span style="font-weight: bold;">@userName</span> silahkan pilih menu :</p>
                            <button @onclick="MainMenu" class="btn btn-light modal-button">Menu Utama</button>
                            @if (authorizedLevel == "1" || authorizedLevel == "2")
                            {
                                <button @onclick="@(() => NavigateTo("/cashm"))" class="btn btn-light modal-button">Cash Management</button>
                                <button @onclick="@(() => NavigateTo("/cardm"))" class="btn btn-light modal-button">Card Management</button>
                            }
                            @if (authorizedLevel == "3" || authorizedLevel == "1")
                            {
                                @if (false)
                                {
                                <button @onclick="@(() => NavigateTo("/cashm"))" class="btn btn-light modal-button">Configuration</button>
                                }
                            }
                            <button @onclick="@OkOnClick" class="btn btn-danger modal-button">Batal</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (isNotAuthorized)
        {
            <div id="myModal" class="modal">
                <!-- Modal content -->
                <div class="modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <p class="text-body">Login <span style="font-weight: bold;">GAGAL</span> silahkan cek kembali ID Terminal, Username dan Password</p>
                            <button @onclick="@OkOnClick" class="btn btn-danger modal-button">Kembali</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (isLoading)
        {
            <div id="myModal" class="modal">
                <div class="modal-blank">
                    <img class="lds-spinner" src="../../assets/image/loader.gif">
                    <p><br>Mohon tunggu</p>
                    <p>proses sedang berlangsung...</p>
                </div>
            </div>
        }
    </div>


    @code{

        private string terminalId = string.Empty;
        private string userName = string.Empty;
        private string password = string.Empty;
        private string isTextfield = "1";

        private string[] StylePNG = { "margin-left: 10%;", "margin-left: 5%;", "margin-left: 10%; margin-top: 5%;", "margin-left: 5%; margin-top: 5%;" };

        private string authorizedLevel = string.Empty;
        private bool isAuthorized = false;
        private bool isLoading = false;
        private bool isNotAuthorized = false;
        private bool isNumeric = false;
        private bool isUpper = false;

        private string _myURL = string.Empty;

        private void DeleteCharField()
        {
            switch(isTextfield)
            {
                case "1":
                    if (terminalId.Length > 0)
                        terminalId = terminalId.Substring(0, terminalId.Length - 1);
                    break;
                case "2":
                    if (userName.Length > 0)
                        userName = userName.Substring(0, userName.Length - 1);
                    break;
                case "3":
                    if (password.Length > 0)
                        password = password.Substring(0, password.Length - 1);
                    break;
            }
        }

        private void InsertCharField(string _input)
        {
            switch(isTextfield)
            {
                case "1":
                    terminalId += _input;
                    break;
                case "2":
                    userName += _input;
                    break;
                case "3":
                    password += _input;
                    break;
            }
        }
        private void UpperToggle()
        {
            isUpper = !isUpper;
        }
        private void NumericToggle()
        {
            isUpper = false;
            isNumeric = !isNumeric;
        }
        private void Inputfield1()
        {
            isTextfield = "1";
        }

        private void Inputfield2()
        {
            isTextfield = "2";
        }

        private void Inputfield3()
        {
            isTextfield = "3";
        }
        protected override async Task OnInitializedAsync()
        {
            cst.Clear();
            trans.ClearTransaction();
            menu._mainMenu.Clear();
            OurUtility.Write_Log("Login Page", "step-action");
            menu.terminalId = config.Read("Terminal", Config.PARAM_MACHINE);
            _myURL = config.Read("URL", Config.PARAM_DEFAULT_URL);
            menu.tokenId = config.Read("Terminal", Config.PARAM_TOKEN);


            //OurUtility.Write_Log(_myURL, "step-action");
        }
        [Microsoft.AspNetCore.Components.Inject]

        protected Microsoft.JSInterop.IJSRuntime theJavaScriptEngine { get; set; }

        protected override void OnAfterRender(bool bFirstRender)
        {
            if (bFirstRender)
            {
                //theJavaScriptEngine.InvokeAsync<System.Object>("callKeyboard");
                this.StateHasChanged();
            }
        }

        private async Task NavigateTo(string strURL)
        {
            isLoading = true;
            await Task.Delay(1000);
            NavMan.NavigateTo(strURL);
        }

        private async Task loginCheck()
        {
            OurUtility.Write_Log("= Login Page", "step-action");
            if (userName == "trilogi")
            {
                Trilogi();
            }
            else
            {
                //ToDo Non Trilogi Technician Login
                await NonTrilogi();
            }
        }

        private void OkOnClick()
        {
            isAuthorized = false;
            isNotAuthorized = false;
        }

        private void Trilogi()
        {
            OurUtility.Write_Log("== Login Trilogi", "step-action");
            //OurUtility.Write_Log("== ID: " + userName + " Pass: " + password, "step-action");
            string pass_check = "trilogi" + DateTime.Now.ToString("yyyyMMdd");
            if (password == pass_check)
            {
                OurUtility.Write_Log("== Login Berhasil", "step-action");
                menu.userName = userName;
                isNotAuthorized = false;
                isAuthorized = true;
                authorizedLevel = "1";
            }
            else
            {
                OurUtility.Write_Log("== Login Gagal", "step-action");
                isAuthorized = false;
                isNotAuthorized = true;
            }
        }

        private async Task NonTrilogi()
        {
            isLoading = true;
            string loginURL = "auth/v1/login";
            string myJson = "{ \"terminalId\": \"" + terminalId + "\"," +
                "\"username\": \"" + userName + "\"," +
                "\"password\": \"" + password + "\"" +
                    "}";
            string myURL = _myURL + loginURL;
            OurUtility.Write_Log("== Login", "step-action");
            //OurUtility.Write_Log("== URL : " + myURL, "step-action");
            OurUtility.Write_Log("== Request API : " + myJson, "step-action");
            string strResult = await OurUtility.PostCallAPI(myURL, myJson, menu);
            OurUtility.Write_Log("== Response API : " + strResult, "step-action");
            if (strResult != null)
            {
                try
                {
                    if (strResult != "Unauthorized")
                    {
                        JObject jobjResult = JObject.Parse(strResult);
                        if (jobjResult.ContainsKey("transaction"))
                        {
                            if (jobjResult["transaction"].SelectToken("statusCode") != null)
                            {
                                if ((string)jobjResult["transaction"].SelectToken("statusCode") == "00")
                                {
                                    OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusCode") + " {Success}", "step-action");
                                    OurUtility.Write_Log("== Login Berhasil", "step-action");

                                    menu.userName = userName;
                                    authorizedLevel = (string)jobjResult["userLevel"];
                                    isLoading = false;
                                    isNotAuthorized = false;
                                    isAuthorized = true;
                                    return;
                                }
                                else
                                {
                                    if (jobjResult["transaction"].SelectToken("errorCode") != null)
                                    {
                                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusDesc") + " {Error}", "step-action");
                                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusDesc");
                                    }
                                    else
                                    {
                                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusCode") + " {Error}", "step-action");
                                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusCode");
                                    }
                                    OurUtility.Write_Log("== Login Gagal", "step-action");
                                    isLoading = false;
                                    isAuthorized = false;
                                    isNotAuthorized = true;
                                }
                            }
                            else
                            {
                                trans.errorCode = "Invalid Status Code";
                                OurUtility.Write_Log("== Login Gagal : " +trans.errorCode, "step-action");
                                isLoading = false;
                                isAuthorized = false;
                                isNotAuthorized = true;
                            }
                        }
                        else
                        {
                            trans.errorCode = "Invalid Transaction Response";
                            OurUtility.Write_Log("== Login Gagal : " + trans.errorCode, "step-action");
                            isLoading = false;
                            isAuthorized = false;
                            isNotAuthorized = true;
                        }
                    }
                    else
                    {
                        trans.errorCode = "Unauthorized";
                        OurUtility.Write_Log("== Login Gagal : " + trans.errorCode, "step-action");
                        isLoading = false;
                        isAuthorized = false;
                        isNotAuthorized = true;
                    }
                }
                catch (Exception ex)
                {
                    trans.errorCode = ex.Message;
                    OurUtility.Write_Log("== Login Error :" + ex.Message, "step-action");
                    NavMan.NavigateTo("/errorlogin");
                }
            }
            else
            {
                trans.errorCode = strResult;
                OurUtility.Write_Log("== Login Error : Hit WebService {Error}", "step-action");
                NavMan.NavigateTo("/errorlogin");
            }
        }
        private async Task MainMenu()
        {
            isLoading = true;
            string menuURL = "menu/v1/get-menu";
            string myJson = "{ \"terminalId\": \"" + menu.terminalId + "\"" +
                    "}";
            string myURL = _myURL + menuURL;
            OurUtility.Write_Log("== Login Non-Trilogi", "step-action");
            OurUtility.Write_Log("== Request API : " + myJson, "step-action");
            string strResult = await OurUtility.PostCallAPI(myURL, myJson, menu);
            OurUtility.Write_Log("== Response API : " + strResult, "step-action");
            if (strResult != null)
            {
                try
                {
                    JObject jobjResult = JObject.Parse(strResult);
                    if ((string)jobjResult["transaction"].SelectToken("statusCode") == "00")
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusCode") + " {Success}", "step-action");
                        OurUtility.Write_Log("== Login Berhasil", "step-action");
                        foreach ((var mm, Int32 i) in jobjResult.SelectToken("menu").Select((mm, i) => (mm, i)))
                        {
                            menu.AddMainMenu(mm.SelectToken("namaMenu").ToString(), mm.SelectToken("url").ToString(), mm.SelectToken("icon").ToString(), mm.SelectToken("menuCode").ToString(),StylePNG[i]);
                        }
                        NavigateTo("/main");
                        return;
                    }
                    else
                    {
                        if ((string)jobjResult["transaction"].SelectToken("errorCode") != null)
                        {
                            OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusDesc") + " {Error}", "step-action");
                            trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusDesc");
                        }
                        else
                        {
                            string _statusDescSub = ((string)jobjResult["transaction"].SelectToken("statusDesc"));
                            string statusDescSub = _statusDescSub.Substring(0, _statusDescSub.IndexOf(":"));
                            OurUtility.Write_Log("== Status Code : " + statusDescSub + " {Error}", "step-action");
                            trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusCode");
                        }
                        OurUtility.Write_Log("== Login Gagal", "step-action");
                    }
                }
                catch (Exception ex)
                {
                    trans.errorCode = strResult;
                    OurUtility.Write_Log("== Login Error :" + ex.Message, "step-action");
                    NavMan.NavigateTo("/errorlogin");
                }
            }
            else
            {
                trans.errorCode = strResult;
                OurUtility.Write_Log("== Login Error : Hit WebService {Error}", "step-action");
                NavMan.NavigateTo("/errorlogin");
            }
        }
    }