@page "/bth/1"

@using MyG5Blazor.Data

@inject IJSRuntime JSRuntime;
@inject Costumer cst;
@inject NavigationManager NavMan
@inject Card_Dispenser cds

<div class="main-panel bg-home">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>


            <form class="navbar-form">
            </form>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <p class="teks-title">Bayar Tagihan KartuHalo</p>
                    <div class="teks-top">
                        <p>Masukkan Nomor kartuHalo yang akan Dibayar Tagihannya</p>
                    </div>
                </div>

                <div class="col-md-6">
                    @if (strNumber == string.Empty)
                    {
                        <input type="text" name="number" placeholder="0811 1234 5678" class="num-field">
                    }
                    else
                    {
                        <input type="text" name="number" class="num-field" @bind="strNumber" />
                    }
                    <div class="num-button">
                        <button class="key-num btn" value="1" @onclick="@(() => InputPhoneNumber("1"))">1</button>
                        <button class="key-num btn" value="2" @onclick="@(() => InputPhoneNumber("2"))">2</button>
                        <button class="key-num btn" value="3" @onclick="@(() => InputPhoneNumber("3"))">3</button>
                        <button class="key-num btn" value="4" @onclick="@(() => InputPhoneNumber("4"))">4</button>
                        <button class="key-num btn" value="5" @onclick="@(() => InputPhoneNumber("5"))">5</button>
                        <button class="key-num btn" value="6" @onclick="@(() => InputPhoneNumber("6"))">6</button>
                        <button class="key-num btn" value="7" @onclick="@(() => InputPhoneNumber("7"))">7</button>
                        <button class="key-num btn" value="8" @onclick="@(() => InputPhoneNumber("8"))">8</button>
                        <button class="key-num btn" value="9" @onclick="@(() => InputPhoneNumber("9"))">9</button>
                        <button class="key-num btn btn-hapus" value="Hapus" @onclick="RemovePhoneNumber">Hapus</button>
                        <button class="key-num btn" value="0" id="myBtnUndefine" @onclick="@(() => InputPhoneNumber("0"))">0</button>
                        <button class="key-num btn btn-hapus" id="myBtn" value="ok" @onclick="CheckNumber">Ok</button>
                    </div>
                    <div class="button-down">
                        <!-- <button class="btn-arrow" value="">Kembali</button>
                <button class="btn-arrow" value="">Menu Utama</button> -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- <div class="centered">Silakan Tekan Menu yang Anda Inginkan</div> -->
</div>

<footer>
    <div class="footer-side1">
        <span class="dot" id="dot-active">1</span>
        <span class="dot">2</span>
        <span class="dot">3</span>
        <span class="dot">4</span>
    </div>
    <div class="footer-side2">
        <button @onclick="MoveToTheFront" class="btn-arrow btn" value="">Kembali</button>
        <button @onclick="MoveToICC" class="btn-arrow btn" value="">Menu Utama</button>
        <!-- <sup>Powered By </sup>Trilogi Persada -->
    </div>
</footer>

<!-- The Modal -->
@if (IsVisible)
{
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    @if (IsInvalid)
                    {
                        <p class="text-body"><span style="font-weight: bold;">Nomor tidak dikenali,</span> harap masukkan nomor Telkomsel yang benar dan aktif</p>
                        <button class="btn btn-danger modal-button" @onclick="@(() => OkOnClick(false))">OK</button>
                    }
                </div>
            </div>
        </div>

    </div>
}

@code{
    private string strNumber = string.Empty;
    private bool IsVisible = false;
    private bool IsInvalid = false;
    private bool IsValid => !IsInvalid;

    private string msg = string.Empty;
    private string errorcode = string.Empty;
    private string strCOM = "COM6";

    protected override async Task OnInitializedAsync()
    {
        cst.Clear();
        StateHasChanged();
        OurUtility.Write_Log("= Bayar Tagihan KartuHalo", "step-action");
        OurUtility.Write_Log("== Insert Phone Number Page", "step-action");
    }

    private void OkOnClick(bool visiblestatus)
    {
        if (visiblestatus)
        {
            if (strNumber.Length > 8 && strNumber.Length < 14)
            {
                IsVisible = visiblestatus;
            }
        }
        else
        {
            IsVisible = visiblestatus;
            IsInvalid = visiblestatus;
        }
    }

    private void CheckNumber()
    {
        if (IsValid)
        {
            NavigateTo("/bth/2");
        }
        else
        {
            IsVisible = true;
        }
    }

    private void InputPhoneNumber(string strInput)
    {
        strNumber += strInput;
    }

    private void RemovePhoneNumber()
    {
        if (strNumber.Length > 0)
            strNumber = strNumber.Substring(0, strNumber.Length - 1);
    }

    private void NavigateTo(string strURL)
    {
        if (strURL != "")
        {
            OurUtility.Write_Log("=== Get Phone Number", "step-action");
            cst.PhoneNumber = strNumber;
        }
        NavMan.NavigateTo(strURL);
    }
    private void MoveToTheFront()
    {
        OurUtility.Write_Log("=== Card Dispenser Move To The Front Position", "step-action");
        OurUtility.Write_Log("==== 1. Card_Dispenser.Stop", "step-action");
        cds.Stop(ref msg);
        OurUtility.Write_Log("==== 2. Card_Dispenser.Start", "step-action");
        if (!cds.Start(ref errorcode, strCOM, ref msg))
        {
            OurUtility.Write_Log("==== 3. Card_Dispenser.Start, Failed", "step-action");
            return;
        }
        OurUtility.Write_Log("==== 3. Card_Dispenser.Initialize", "step-action");
        cds.Initialize(ref errorcode, ref msg);
        OurUtility.Write_Log("==== 4. Card_Dispenser.MoveTo_Front_Hold", "step-action");
        cds.MoveTo_The_Front(ref errorcode, ref msg);
        OurUtility.Write_Log("==== 5. Card_Dispenser.Stop", "step-action");
        cds.Stop(ref msg);
    }

    private void MoveToICC()
    {
        OurUtility.Write_Log("=== Card Dispenser Move To IC Position", "step-action");
        OurUtility.Write_Log("==== 1. Card_Dispenser.Stop", "step-action");
        cds.Stop(ref msg);
        OurUtility.Write_Log("==== 2. Card_Dispenser.Start", "step-action");
        if (!cds.Start(ref errorcode, strCOM, ref msg))
        {
            OurUtility.Write_Log("==== 3. Card_Dispenser.Start, Failed", "step-action");
            return;
        }
        OurUtility.Write_Log("==== 3. Card_Dispenser.Initialize", "step-action");
        cds.Initialize(ref errorcode, ref msg);
        OurUtility.Write_Log("==== 4. Card_Dispenser.MoveTo_IC_Card", "step-action");
        while (!cds.MoveTo_IC_Card(ref errorcode, ref msg)) { }
        OurUtility.Write_Log("==== 5. Card_Dispenser.Stop", "step-action");
        cds.Stop(ref msg);
    }
}
