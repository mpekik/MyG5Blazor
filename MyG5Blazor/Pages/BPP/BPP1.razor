@page "/IP/1"

@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System.Net.Http;
@using System.Text;
@using System;
@using System.Threading.Tasks;
@using MyG5Blazor.Data
@using System.Drawing.Printing
@using System.Drawing
@using System.IO

@inject IJSRuntime JSRuntime
@inject Costumer cst
@inject NavigationManager NavMan
@inject Transaction trans
@inject Config config
@inject Menu menu

<div class="main-panel bg-home">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>


            <form class="navbar-form">
            </form>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <p class="teks-title">Beli Pulsa Prabayar</p>
                    <div class="teks-top">
                        <p>Masukkan Nomor yang akan Diisikan Pulsa</p>
                    </div>
                </div>

                <div class="col-md-6">
                    @if (strNumber == string.Empty)
                    {
                        <input type="text" name="number" placeholder="0811 1234 5678" class="num-field">
                    }
                    else
                    {
                        <input type="text" name="number" class="num-field" @bind="strNumber" />
                    }
                    <div class="num-button">
                        <button class="key-num btn" value="1" @onclick="@(() => InputPhoneNumber("1"))">1</button>
                        <button class="key-num btn" value="2" @onclick="@(() => InputPhoneNumber("2"))">2</button>
                        <button class="key-num btn" value="3" @onclick="@(() => InputPhoneNumber("3"))">3</button>
                        <button class="key-num btn" value="4" @onclick="@(() => InputPhoneNumber("4"))">4</button>
                        <button class="key-num btn" value="5" @onclick="@(() => InputPhoneNumber("5"))">5</button>
                        <button class="key-num btn" value="6" @onclick="@(() => InputPhoneNumber("6"))">6</button>
                        <button class="key-num btn" value="7" @onclick="@(() => InputPhoneNumber("7"))">7</button>
                        <button class="key-num btn" value="8" @onclick="@(() => InputPhoneNumber("8"))">8</button>
                        <button class="key-num btn" value="9" @onclick="@(() => InputPhoneNumber("9"))">9</button>
                        <button class="key-num btn btn-hapus" value="Hapus" @onclick="RemovePhoneNumber">Hapus</button>
                        <button class="key-num btn" value="0" id="myBtnUndefine" @onclick="@(() => InputPhoneNumber("0"))">0</button>
                        <button class="key-num btn btn-hapus" id="myBtn" value="ok" @onclick="@(()=>OkOnClick(true))">Ok</button>
                    </div>
                    <div class="button-down">
                        <!-- <button class="btn-arrow" value="">Kembali</button>
                        <button class="btn-arrow" value="">Menu Utama</button> -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- <div class="centered">Silakan Tekan Menu yang Anda Inginkan</div> -->
</div>

<footer>
    <div class="footer-side1">
        <span class="dot" id="dot-active">1</span>
        <span class="dot">2</span>
        <span class="dot">3</span>
        <span class="dot">4</span>
    </div>
    <div class="footer-side2">
        <button @onclick="@(()=>NavigateTo("/main"))" class="btn-arrow btn" value="">Kembali</button>
        <button @onclick="@(()=>NavigateTo("/main"))" class="btn-arrow btn" value="">Menu Utama</button>
        <!-- <sup>Powered By </sup>Trilogi Persada -->
    </div>
</footer>

<!-- The Modal -->
@if (IsVisible)
{
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p class="text-body">Anda akan melakukan <span style="font-weight: bold;">Pengisian Pulsa Prabayar</span> untuk nomor :</p>
                    <p style="font-size: 25pt; font-weight: bold;">@strNumber</p>
                    <button @onclick="@(()=>CheckNumber("/IP/2"))" class="btn btn-danger modal-button">Lanjut</button>
                    <button class="btn btn-light modal-button" @onclick="@(()=>OkOnClick(false))">Batal</button>
                </div>
            </div>
        </div>

    </div>
}

@if (IsInvalid)
{
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p class="text-body">@((MarkupString)strMsgError)</p>
                    <button class="btn btn-danger modal-button" @onclick="@(() => OkOnClick(false))">OK</button>
                </div>
            </div>
        </div>

    </div>
}
@if (isLoading)
{
    <div id="myModal" class="modal">
        <div class="modal-blank">
            <img class="lds-spinner" src="../../assets/image/loader.gif">
            <p><br>Mohon tunggu</p>
            <p>proses sedang berlangsung...</p>
        </div>
    </div>
}
@code{
    private string strNumber = string.Empty;
    private bool IsVisible = false;
    private bool IsVisible2 = false;
    private bool IsInvalid = false;
    private bool IsValid => !IsInvalid;
    private bool isLoading = false;

    public string _myURL = string.Empty;
    public string serviceURL = "isi-pulsa/v1/submit-nohp";
    private string _termID = string.Empty;
    private string strMsgError = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _myURL = config.Read("URL", Config.PARAM_DEFAULT_URL);
        cst.Clear();
        OurUtility.Write_Log("= Beli Pulsa Prabayar", "step-action");
        OurUtility.Write_Log("== Insert Phone Number Page", "step-action");
    }

    private void OkOnClick(bool visiblestatus)
    {
        if (visiblestatus)
        {
            if (strNumber.Length > 8 && strNumber.Length < 14)
            {
                IsVisible = visiblestatus;
            }
        }
        else
        {
            IsVisible = visiblestatus;
            IsInvalid = visiblestatus;
        }
    }

    private void InputPhoneNumber(string strInput)
    {
        strNumber += strInput;
    }

    private void RemovePhoneNumber()
    {
        if (strNumber.Length > 0)
            strNumber = strNumber.Substring(0, strNumber.Length - 1);
    }

    private void NavigateTo(string strURL)
    {
        if (strURL != "/main")
        {
            OurUtility.Write_Log("=== Get Phone Number", "step-action");
            cst.PhoneNumber = "62" + strNumber.Substring(1);
        }
        NavMan.NavigateTo(strURL);
    }

    private async Task CheckNumber(string strURL)
    {
        trans.startTime = DateTimeOffset.UtcNow.ToUnixTimeMilliseconds();

        IsVisible = false;
        isLoading = true;

        menu.edc = "1";
        menu.cash = "1";

        byte[] image = OurUtility.CaptureImage();
        var imageBytesStr = Convert.ToBase64String(image);
        cst.PhoneNumber = "62" + strNumber.Substring(1);

        //Set HTTP Request Body
        string myJsonForLog = "{ \"terminalId\" : \"" + trans.termID + "\"," +
                    "\"noHp\" : \"" + "62" + strNumber.Substring(1) + "\",";

        string myJson = myJsonForLog +
                        "\"image\" : \"" + imageBytesStr + "\"" +
                        "}";
        string myURL = _myURL + serviceURL;

        OurUtility.Write_Log("== Check Phone Number", "step-action");
        OurUtility.Write_Log("== Request API : " + myJsonForLog, "step-action");
        string strResult = await OurUtility.PostCallAPI(myURL, myJson, menu);
        //OurUtility.Write_Log("== Response API : " + strResult, "step-action");
        if (strResult != null)
        {
            try
            {
                JObject jobjResult = JObject.Parse(strResult);
                if ((string)jobjResult["transaction"]["statusCode"] == "00")
                {
                    OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"]["statusCode"] + " {Success}", "step-action");
                    trans.SetTransaction((string)jobjResult["transaction"]["transactionId"]);
                    cst.CostumerProfile((string)jobjResult["profile"]["type"], (string)jobjResult["profile"]["nama"], (string)jobjResult["profile"]["noHp"], (string)jobjResult["profile"]["idType"], (string)jobjResult["profile"]["idNumber"], (string)jobjResult["profile"]["accountId"]);
                    OurUtility.Write_Log("== Transaction ID : " + trans.transID + ", Phone Number : " + cst.PhoneNumber + " {Success}", "step-action");
                    cst.intTagihan = OurUtility.ToInt32((string)jobjResult["tagihan"]);

                    //Add Step To Audit Trail List
                    trans.AddTrail("SUBMIT NO HP", cst.PhoneNumber, "SUCCESS");

                    //trans.transID = "-";
                    //cst.PhoneNumber = "62" + strNumber.Substring(1);
                    NavMan.NavigateTo(strURL);
                }
                else if ((string)jobjResult["transaction"]["statusCode"] == "01")
                {
                    if ((string)jobjResult["transaction"]["errorCode"] != null)
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"]["statusDesc"] + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"]["statusDesc"];
                    }
                    else
                    {
                        string _statusDescSub = ((string)jobjResult["transaction"]["statusDesc"]);
                        string statusDescSub = _statusDescSub.Substring(0, _statusDescSub.IndexOf(":"));
                        OurUtility.Write_Log("== Status Code : " + statusDescSub + " {Error}", "step-action");
                        trans.errorCode = statusDescSub;
                    }
                    trans.AddTrail("SUBMIT NO HP", cst.PhoneNumber, "FAILED");
                    trans.status = "GAGAL";
                    await OurUtility.AuditTrail(trans, menu, cst);

                    NavMan.NavigateTo("/error");
                }
                else if ((string)jobjResult["transaction"]["statusCode"] == "02")
                {
                    strMsgError = (string)jobjResult["transaction"]["statusDesc"];
                    isLoading = false;
                    IsVisible = false;
                    IsInvalid = true;
                    trans.AddTrail("SUBMIT NO HP", cst.PhoneNumber, "Tidak Memiliki Tagihan");
                    trans.status = "GAGAL";
                    await OurUtility.AuditTrail(trans, menu, cst);
                }
            }
            catch (Exception ex)
            {
                trans.errorCode = strResult;
                OurUtility.Write_Log("== Error :" + ex.Message, "step-action");
                NavMan.NavigateTo("/error");
            }
        }
        else
        {
            trans.errorCode = strResult;
            OurUtility.Write_Log("== Error : Hit WebService {Error}", "step-action");
            NavMan.NavigateTo("/error");
        }

    }
}
