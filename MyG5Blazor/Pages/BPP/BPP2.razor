@page "/IP/2"
@page "/PR/2"

@using MyG5Blazor.Data
@using System.Linq;

@inject IJSRuntime JSRuntime
@inject Costumer cst
@inject NavigationManager NavMan
@inject Transaction trans
@inject Config config
@inject Menu menu

<div class="main-panel bg-home">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <div class="teks-title">Beli Pulsa Prabayar</div>
                    <div id="proses-pindai">
                        <div class="teks-center"> Pilih Nominal Pulsa yang Anda Inginkan </div>
                    </div>
                </div>

                <div class="col-md-6">
                    @*@foreach ((Menu.MenuPulsa mp,Int32 i) in menu._menuPulsa.Select((mp, i) => (mp, i)))
                        {
                         @if(i%2==0)
                         {
                             @((MarkupString)mp._addHTML)
                         }
                                <div class="col">
                                    <img @onclick="@(() => Nominal(int.Parse(mp._labelNominal)))" id="" class="nominal" src="../../assets/image/Voucher/@mp._icon">
                                </div>
                         @if(i%2==1)
                         {
                             @((MarkupString)mp._addHTML)
                         }
                        }*@

                    @*@for (int i = 0; i < menu._menuPulsa.Count; i=i+2)
                        {
                            @if (i % 2 == 0)
                            {
                                <div class="row" style="margin-left: 10px;">
                                    <div class="col">
                                        <img @onclick="@(()=>Nominal(int.Parse(menu._menuPulsa[i]._labelNominal)))" id="" class="nominal" src="../../assets/image/Voucher/@menu._menuPulsa[i]._icon">
                                    </div>
                                    @if (i + 1 < menu._menuPulsa.Count)
                                    {
                                <div class="col">
                                    <img @onclick="@(()=>Nominal(int.Parse(menu._menuPulsa[i+1]._labelNominal)))" id="" class="nominal" src="../../assets/image/Voucher/@menu._menuPulsa[i+1]._icon">
                                </div>
                                    }
                                </div>
                            }
                        }*@
                    <div class="row" style="margin-left: 10px;">
                        @if (stringMenu[0] == "0")
                        {
                            <div class="col">
                                <img @onclick="@(() => Nominal(int.Parse(arrayTrans[0])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[0]">
                            </div>
                        }
                        @if (stringMenu[1] == "0")
                        {
                            <div class="col">
                                <img @onclick="@(() => Nominal(int.Parse(arrayTrans[1])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[1]">
                            </div>
                        }
                    </div>
                    @if (stringMenu[2] == "0")
                    {
                        <div class="row" style="margin-left: 10px;">
                            @if (stringMenu[2] == "0")
                            {
                                <div class="col">
                                    <img @onclick="@(() => Nominal(int.Parse(arrayTrans[2])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[2]">
                                </div>
                            }
                            @if (stringMenu[3] == "0")
                            {
                                <div class="col">
                                    <img @onclick="@(() => Nominal(int.Parse(arrayTrans[3])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[3]">
                                </div>
                            }
                        </div>
                    }
                    @if (stringMenu[4] == "0")
                    {
                        <div class="row" style="margin-left: 10px;">
                            @if (stringMenu[4] == "0")
                            {
                                <div class="col">
                                    <img @onclick="@(() => Nominal(int.Parse(arrayTrans[4])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[4]">
                                </div>
                            }
                            @if (stringMenu[5] == "0")
                            {
                                <div class="col">
                                    <img @onclick="@(() => Nominal(int.Parse(arrayTrans[5])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[5]">
                                </div>
                            }
                        </div>
                    }
                    @if (stringMenu[6] == "0")
                    {
                        <div class="row" style="margin-left: 10px;">
                            @if (stringMenu[6] == "0")
                            {
                                <div class="col">
                                    <img @onclick="@(() => Nominal(int.Parse(arrayTrans[6])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[6]">
                                </div>
                            }
                            @if (stringMenu[7] == "0")
                            {
                                <div class="col">
                                    <img @onclick="@(() => Nominal(int.Parse(arrayTrans[7])))" id="" class="nominal" src="../../assets/image/Voucher/@AssetsPNG[7]">
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- <div class="centered">Silakan Tekan Menu yang Anda Inginkan</div> -->
    <footer>
        <div class="footer-side1">
            <span class="dot">1</span>
            <span class="dot" id="dot-active">2</span>
            <span class="dot">3</span>
            <span class="dot">4</span>
        </div>
        <div class="footer-side2">
            <button @onclick="Back" class="btn-arrow btn" value="">Kembali</button>
            <button @onclick="MainMenu" class="btn-arrow btn" value="">Menu Utama</button>
            <!-- <sup>Powered By </sup>Trilogi Persada -->
        </div>
    </footer>
    @if (isTimeOut)
    {
        <div id="myModal" class="modal">

            <!-- Modal content -->
            <div class="modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <p class="text-body"><span style="font-weight: bold;">Sesi Anda akan segera berakhir.</span><br />Anda akan keluar dari sistem dalam <span style="font-weight: bold;">@dtkTimeOut.ToString()</span> detik.</p>
                        <button class="btn btn-danger modal-button" @onclick="StopTimer">OK</button>
                        <!-- <button class="btn btn-light modal-button">Tidak</button> -->
                    </div>
                </div>
            </div>

        </div>
    }
</div>

@code
{
    private string[] hrefMenu = { "", "", "", "", "", "", "", "" };
    private string[] AssetsPNG = { "", "", "", "", "", "", "", "" };
    private string[] arrayTrans = { "", "", "", "", "", "", "", "" };
    private string[] stringMenu = { "1", "1", "1", "1", "1", "1", "1", "1" };

    private bool isTimeOut = false;
    private int dtkTimeOut = 60;
    protected override async Task OnInitializedAsync()
    {
        PopulatePulsa();
    }

    private void Nominal(int intNominal)
    {
        cst.intTagihan = intNominal;
        trans.AddTrail("CHOOSE NOMINAL", cst.intTagihan.ToString(), "00");
        NavMan.NavigateTo("/IP/3");
    }
    private async Task PopulatePulsa()
    {
        for (int i = 0; i < menu._menuPulsa.Count(); i++)
        {
            AssetsPNG[i] = menu._menuPulsa[i]._icon;
            arrayTrans[i] = menu._menuPulsa[i]._labelNominal;
            stringMenu[i] = "0";
        }
    }

    private void NavigateTo(string strURL)
    {
        NavMan.NavigateTo(strURL);
    }
    private async Task MainMenu()
    {
        trans.AddTrail("CHOOSE NOMINAL", "BACK TO MAIN MENU", "02");
        trans.status = "02";
        await OurUtility.AuditTrail(trans, menu, cst);
        NavMan.NavigateTo("/main");
    }
    private async Task Back()
    {
        trans.AddTrail("CHOOSE NOMINAL", "BACK TO INPUT NUMBER", "02");
        trans.status = "02";
        await OurUtility.AuditTrail(trans, menu, cst);
        NavMan.NavigateTo("/IP/1");
    }

    [Microsoft.AspNetCore.Components.Inject]

    protected Microsoft.JSInterop.IJSRuntime theJavaScriptEngine { get; set; }

    [Microsoft.AspNetCore.Components.Inject]

    protected Microsoft.AspNetCore.Components.NavigationManager theNavigationManager { get; set; }

    private bool timer = false;
    protected override void OnAfterRender(bool bFirstRender)
    {
        if (bFirstRender)
        {
            //timer = true;
            //theJavaScriptEngine.InvokeAsync<System.Object>("setupUserIdleTimer", new object[] { Microsoft.JSInterop.DotNetObjectReference.Create(this), 10000, true });

            //this.StateHasChanged();
        }
    }

    [Microsoft.JSInterop.JSInvokable]

    public void theIdleTimeoutFired()
    {
        if (timer)
        {
            timer = false;
            isTimeOut = true;
            StateHasChanged();
            Console.WriteLine("Tes");
            //NavMan.NavigateTo(" ");
        }
    }

    TimeSpan tsTimeOut = new TimeSpan();
    bool isStopWatch = false;

    async Task TimeLeft()
    {
        while (dtkTimeOut > 0 && isTimeOut)
        {
            Console.WriteLine(dtkTimeOut);
            await Task.Delay(1000);
            dtkTimeOut -= 1;
            StateHasChanged();
        }
        await AfterTime();
    }

    Task AfterTime()
    {
        if (dtkTimeOut == 0)
        {
            Console.WriteLine("Task Completed");
            return Task.CompletedTask;
        }
        return Task.CompletedTask;
    }

    async Task StopTimer()
    {
        isTimeOut = false;
        dtkTimeOut = 60;
    }
}
