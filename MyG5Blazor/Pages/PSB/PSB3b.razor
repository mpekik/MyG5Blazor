@page "/PSB/3b"

@using MyG5Blazor.Data
@using System.Linq;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System;
@using System.Threading.Tasks;
@using System.Net.Http;

@inject Costumer cst
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavMan
@inject Menu menu
@inject Transaction trans
@inject Config config
<div class="main-panel bg-home">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <p class="teks-title">Berlangganan KartuHALO</p>
                    <div class="teks-top">
                        <p>Silakan Pilih Nomor KartuHalo yang Anda Inginkan</p> <br>
                        <p>Masukkan 4 Digit Nomor untuk Memudahkan Proses Pencarian</p> <br>
                        <p style="font-weight:bold;">Anda dapat Melakukan Pencarian Nomor<br />hingga 3x</p> <br>
                    </div>
                </div>

                <div class="col-md-6">
                    @if (strNumber == string.Empty)
                    {
                        <input type="text" name="number" placeholder="Contoh : 4444" class="num-field" readonly>
                    }
                    else
                    {
                        <input type="text" name="number" class="num-field" @bind="strNumber" readonly />
                    }
                    <div class="num-button">
                        <button class="key-num btn" value="1" @onclick="@(() => InputPhoneNumber("1"))">1</button>
                        <button class="key-num btn" value="2" @onclick="@(() => InputPhoneNumber("2"))">2</button>
                        <button class="key-num btn" value="3" @onclick="@(() => InputPhoneNumber("3"))">3</button>
                        <button class="key-num btn" value="4" @onclick="@(() => InputPhoneNumber("4"))">4</button>
                        <button class="key-num btn" value="5" @onclick="@(() => InputPhoneNumber("5"))">5</button>
                        <button class="key-num btn" value="6" @onclick="@(() => InputPhoneNumber("6"))">6</button>
                        <button class="key-num btn" value="7" @onclick="@(() => InputPhoneNumber("7"))">7</button>
                        <button class="key-num btn" value="8" @onclick="@(() => InputPhoneNumber("8"))">8</button>
                        <button class="key-num btn" value="9" @onclick="@(() => InputPhoneNumber("9"))">9</button>
                        <button class="key-num btn btn-hapus" value="Hapus" @onclick="RemovePhoneNumber">Hapus</button>
                        <button class="key-num btn" value="0" id="myBtnUndefine" @onclick="@(() => InputPhoneNumber("0"))">0</button>
                        <button class="key-num btn btn-hapus" id="myBtn" value="ok" @onclick="@(()=>InvokeAsync(OkOnClick))">Ok</button>
                    </div>
                    <div class="button-down">
                        <!-- <button class="btn-arrow" value="">Kembali</button>
                        <button class="btn-arrow" value="">Menu Utama</button> -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- <div class="centered">Silakan Tekan Menu yang Anda Inginkan</div> -->
<footer>
    <div class="footer-side1">
        <span class="dot2">1</span>
        <span class="dot2">2</span>
        <span class="dot2" id="dot-active">3</span>
        <span class="dot2">4</span>
        <span class="dot2">5</span>
        <span class="dot2">6</span>
        <span class="dot2">7</span>
        <span class="dot2">8</span>
        <span class="dot2">9</span>
    </div>
    <div class="footer-side2">
        <button @onclick="@(()=>NavigateTo("/PSB/3a"))" class="btn-arrow btn" value="">Kembali</button>
        <button @onclick="MainMenu" class="btn-arrow btn" value="">Menu Utama</button>
        <!-- <sup>Powered By </sup>Trilogi Persada -->
    </div>
</footer>
@if (isPopUp)
{
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p class="text-body">@((MarkupString)strMsgError)</p>
                    <button class="btn btn-danger modal-button" @onclick="@(() => isPopUp = false)">OK</button>
                </div>
            </div>
        </div>
    </div>
}
@if (isLoading)
{
    <div id="myModal" class="modal" style="z-index:999;">
        <div class="modal-blank">
            <img class="lds-spinner" src="../../assets/image/loader.gif">
            <p><br>Mohon tunggu</p>
            <p>proses sedang berlangsung...</p>
        </div>
    </div>
}
@code
{
    private bool IsMethod = false;
    private bool IsVisible = false;
    private bool IsInvalid = false;
    private bool isLoading = false;
    private bool isSubmit = true;
    private bool isPopUp = false;

    private string strNumber = string.Empty;
    private string _myURL = string.Empty;
    private string getNomor = "psb-halo/v1/list-postpaid-numbers";
    private string strMsgError = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _myURL = config.Read("URL", Config.PARAM_DEFAULT_URL);
        menu.psbNomer.Clear();
    }

    private void InputPhoneNumber(string strInput)
    {
        if (strNumber.Length < 4)
            strNumber += strInput;
    }

    private async Task OkOnClick()
    {
        if (strNumber.Length > 0 && strNumber.Length < 5)
        {
            trans.psbDetail.patternNumber = strNumber;
            await GetNomor();
        }
    }
    private async Task MainMenu()
    {
        isLoading = true;
        trans.AddTrail("INPUT NUMBER", "BACK TO MAIN MENU", "02");
        trans.status = "02";
        await OurUtility.AuditTrailPSB(trans, menu, cst);
        NavMan.NavigateTo("/main");
    }

    private void RemovePhoneNumber()
    {
        if (strNumber.Length > 0)
            strNumber = strNumber.Substring(0, strNumber.Length - 1);
    }
    private void NavigateTo(string strURL)
    {
        if (strURL != "")
        {
            if (!IsMethod)
            {
                NavMan.NavigateTo(strURL);
            }
            else
            {
                cst.intMPembayaran = 0;
                IsMethod = false;
            }
        }
        else
        {
            NavMan.NavigateTo(strURL);
        }
    }
    private async Task GetNomor()
    {
        isLoading = true;
        menu.psbNomer.Clear();
        InvokeAsync(StateHasChanged);
        await Task.Delay(200);
        string myJson = "{ \"terminalId\": \"" + menu.terminalId + "\"," +
            "\"transactionId\": \"" + trans.transID + "\"," +
            "\"poolName\": \"" + trans.psbDetail.selectedPaket + "\"," +
            "\"pattern\": \"" + trans.psbDetail.patternNumber + "\"" +
               "}";
        string myURL = _myURL + getNomor;
        OurUtility.Write_Log("Get List Number", "step-action");
        OurUtility.Write_Log("== Request API : " + myJson, "step-action");
        string strResult = await OurUtility.PostCallAPI(myURL, myJson, menu);
        OurUtility.Write_Log("== Response API : " + strResult, "step-action");


        if (strResult != "" && strResult != "Forbidden" && strResult != "NotFound" &&
        strResult != "BadRequest" && strResult != "InternalServerError")
        {
            try
            {
                JObject jobjResult = JObject.Parse(strResult);
                if ((string)jobjResult["transaction"].SelectToken("statusCode") == "00")
                {
                    trans.AddTrail("Get List Number", "Pattern : " + trans.psbDetail.patternNumber + ", Pool : " + trans.psbDetail.selectedPaket, "00");
                    foreach ((var num, Int32 i) in jobjResult.SelectToken("numbers").Select((pp, i) => (pp, i)))
                    {
                        menu.psbNomer.Add(num.ToString());
                    }
                    menu.psbIndex = menu.psbNomer.Count();
                    NavigateTo("/PSB/3c");
                }
                else if ((string)jobjResult["transaction"].SelectToken("statusCode") == "01")
                {
                    if ((string)jobjResult["transaction"].SelectToken("errorCode") != null)
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusDesc") + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("errorCode");
                    }
                    else
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusCode") + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusCode");
                    }
                    trans.AddTrail("Get List Number", "Pattern : " + trans.psbDetail.patternNumber + ", Pool : " + trans.psbDetail.selectedPaket, "01");
                    trans.status = "01";
                    await OurUtility.AuditTrailPSB(trans, menu, cst);
                    //isNotIdle = false;
                    isLoading = false;
                    NavigateTo("/error");
                }
                else if ((string)jobjResult["transaction"].SelectToken("statusCode") == "02")
                {
                    isLoading = false;
                    strMsgError = (string)jobjResult["transaction"].SelectToken("statusDesc");
                    trans.AddTrail("Get List Number", "Pattern : " + trans.psbDetail.patternNumber + ", Pool : " + trans.psbDetail.selectedPaket, "02");

                    isPopUp = false;
                    return;
                }
            }
            catch (Exception ex)
            {
                isLoading = false;
                trans.AddTrail("Get List Number", "Exception Error ", "01");
                trans.status = "01";
                await OurUtility.AuditTrailPSB(trans, menu, cst);

                trans.errorCode = "Exception Error";
                OurUtility.Write_Log("== Error : " + ex.Message, "step-action");
                //isNotIdle = false;
                NavMan.NavigateTo("/error");
            }
        }
        else
        {
            isLoading = false;
            trans.AddTrail("Get List Number", "Hit Webservice Error {" + strResult+"}", "01");
            trans.status = "01";
            await OurUtility.AuditTrailPSB(trans, menu, cst);

            trans.errorCode = "Hit Webservice Error {" + strResult + "}";
            OurUtility.Write_Log("== Hit Webservice Error {" + strResult + "}", "step-action");
            //isNotIdle = false;
            NavMan.NavigateTo("/error");
        }
    }
    private void CheckNumber()
    {
        menu.psbIndex = menu.psbNomer.Count();
        NavigateTo("/PSB/3c");
    }
}
