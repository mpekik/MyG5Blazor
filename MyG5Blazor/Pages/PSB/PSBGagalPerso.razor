@page "/PSB/gagalperso"

@using MyG5Blazor.Data
@using System.IO.Ports
@using System.IO
@using System.Threading
@using System.Text
@using System
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System.Net.Http;
@using System.Threading.Tasks;

@inject IJSRuntime JSRuntime
@inject Costumer cst
@inject NavigationManager NavMan
@inject EDC edc
@inject BlazorTimer Timer
@inject BlazorTimer TimerCES
@inject Transaction trans
@inject Config config
@inject Menu menu
@inject Card_Dispenser cds

<div class="main-panel bg-home" style="z-index:1;">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>

            <form class="col-md-6">
                <div class="input-group no-border">
                    <div class="checklist">
                            <img src="../../assets/image/tanda_x.png" />
                    </div>
                </div>
            </form>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <div class="teks-title">Berlangganan KartuHalo</div>
                    <div id="status-pay" class="teks-center teks-bold" style="line-height: 1; font-size: xx-large; margin-top: 3em;">
                        Proses Pembayaran Berlangganan KartuHalo <b class="red">Tidak Berhasil</b><br><br>

                        <span style="font-weight: normal;">Silakan hubungi Customer Service GraPARI untuk bantuan.</span>

                    </div>
                </div>

                <div class="col-md-6" style="display:grid;min-height:25vh;">
                    <div id="image-pulsa" class="image-center2" style="align-self:center;">
                        <img src="../../assets/image/Logo/00_logo_KartuHalo.png" alt="" width="450px">
                     </div>
                </div>
            </div>
        </div>
    </div>

    <footer style="z-index:2;">
        <div class="footer-side1">
            <span class="dot2">1</span>
            <span class="dot2">2</span>
            <span class="dot2">3</span>
            <span class="dot2">4</span>
            <span class="dot2">5</span>
            <span class="dot2">6</span>
            <span class="dot2">7</span>
            <span class="dot2">8</span>
            <span class="dot2" id="dot-active">9</span>
        </div>
        <div class="footer-side2">
            <!--<sup>Powered By </sup>Trilogi Persada -->
        </div>
    </footer>
</div>
@code
{
    public List<CES> surveys = new List<CES>();

    private string pageClass = "main-panel bg-edc-process";

    private string strNPS1Value = string.Empty;
    private string strMsgError = string.Empty;
    private string strBillCom = string.Empty;
    private string errorcode = string.Empty;
    private string nohp = string.Empty;

    public string _myURL = string.Empty;
    private string releaseNumberService = "psb-halo/v1/release-number";

    string msg = string.Empty;
    string logoTsel = System.IO.Directory.GetCurrentDirectory() + @"\wwwroot\assets\image\Logo\Logo_MyGraPARI_mini.png";

    protected override async Task OnInitializedAsync()
    {
        trans.psbDetail.statusPayment = "01";
        _myURL = config.Read("URL", Config.PARAM_DEFAULT_URL);
        nohp = trans.psbDetail.selectedNumber;

        await Task.Delay(15000);
        NavigateTo("/main");
    }

    private bool translog = true;

    private void TimerElapsedHandler()
    {
        NavigateTo("/main");
    }

    private void NavigateTo(string strURL)
    {
        NavMan.NavigateTo(strURL);
    }

    private async Task ReleaseNumber()
    {
        await Task.Delay(5000);
        string myJson = "{ \"terminalId\": \"" + menu.terminalId + "\"," +
            "\"transactionId\": \"" + trans.transID + "\"," +
            "\"poolName\": \"" + trans.psbDetail.PaketPSB._poolName + "\"," +
            "\"noHp\": \"" + trans.psbDetail.selectedNumber + "\"" +
               "}";
        string myURL = _myURL + releaseNumberService;
        OurUtility.Write_Log("Release Number", "step-action");
        OurUtility.Write_Log("== Request API : " + myJson, "step-action");
        string strResult = await OurUtility.PostCallAPI(myURL, myJson, menu);

        if (strResult != "" && strResult != "Forbidden" && strResult != "NotFound" &&
            strResult != "BadRequest" && strResult != "InternalServerError")
        {
            try
            {
                JObject jobjResult = JObject.Parse(strResult);
                if ((string)jobjResult["transaction"].SelectToken("statusCode") == "00")
                {
                    trans.AddTrail("Release Number", "Number : " + trans.psbDetail.selectedNumber + ", Pool : " + trans.psbDetail.PaketPSB._poolName, "00");
                }
                else if ((string)jobjResult["transaction"].SelectToken("statusCode") == "01")
                {
                    if ((string)jobjResult["transaction"].SelectToken("errorCode") != null)
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusDesc") + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("errorCode");
                    }
                    else
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusCode") + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusCode");
                    }
                    trans.AddTrail("Release Number", "Number : " + trans.psbDetail.selectedNumber + ", Pool : " + trans.psbDetail.PaketPSB._poolName, "01");
                }
                else if ((string)jobjResult["transaction"].SelectToken("statusCode") == "02")
                {
                    strMsgError = (string)jobjResult["transaction"].SelectToken("statusDesc");
                    trans.AddTrail("Release Number", "Number : " + trans.psbDetail.patternNumber + ", Pool : " + trans.psbDetail.selectedPaket, "02");

                    return;
                }
            }
            catch (Exception ex)
            {
                trans.AddTrail("Release Number", "Exception Error ", "01");

                trans.errorCode = "Exception Error";
                OurUtility.Write_Log("== Error : " + ex.Message, "step-action");
                //isNotIdle = false;
                //NavMan.NavigateTo("/error");
            }
        }
        else
        {
            trans.AddTrail("Release Number", "Hit Webservice Error : " + strResult, "01");

            trans.errorCode = "Hit Webservice Error : " + strResult;
            OurUtility.Write_Log("== Error : Hit Webservice Error : " + strResult, "step-action");
            //isNotIdle = false;
            //NavMan.NavigateTo("/error");
        }
    }
} 