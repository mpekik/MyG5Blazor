@page "/PSB/3a"

@using MyG5Blazor.Data
@using System.Linq;

@inject IJSRuntime JSRuntime
@inject Costumer cst
@inject NavigationManager NavMan
@inject Transaction trans
@inject Config config
@inject Menu menu

<div class="main-panel bg-home">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <div class="teks-title">Berlangganan KartuHalo</div>
                    <div id="konfirmasi-teks" class="teks-status">Silakan Pilih Paket yang Anda Butuhkan</div>
                    <div class="teks-center3">Batas Pemakaian akan Mengikuti<br>2x Harga Paket yang Anda Pilih</div>
                    <div class="teks-bot">Penagihan Dilakukan pada Setiap<br> Tanggal 1 di Bulan Berikutnya</div>
                </div>

                <div class="col-md-6">
                    <div class="form-input-data">
                        <div class="col-md-12" style="margin-left: 1.5%;">
                            <div class="form-group" style="display: flex;">
                                @if (menuEnabled[0 + menu.packageIndex])
                                {
                                    <div class="card" style="width: 18.5rem; background-color: #F1F1F1; cursor: pointer;" id="myBtn" @onclick="@(()=>SelectPacket(0+menu.packageIndex))">
                                        <h4 class="card-header" style="font-weight: bold; color: red;">@menuVarianName[0 + menu.packageIndex]</h4>
                                        <div class="row">
                                            <div class="col-md-6" style="display: flex;">
                                                <p class="card-header nominal-kuota">@menuViewDataAllNet[0 + menu.packageIndex]</p>
                                                <p class="card-header giga-bytes">@menuSatuanDataAllNet[0 + menu.packageIndex]</p>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="card-header detail-1">&nbsp;<br>&nbsp;</div>
                                                <div class="card-header detail-2">Kuota Telepon dan SMS</div>
                                            </div>
                                        </div>
                                        <div class="card-body" style="background-color: white; border-radius: 8px;">
                                            <h3 class="card-title" style="font-weight: bold; text-align: center; color: red;">Rp @int.Parse(menuNominal[0 + menu.packageIndex]).ToString("N0")</h3>
                                        </div>
                                    </div>
                                }
                                @if (menuEnabled[1 + menu.packageIndex])
                                {
                                    <div @onclick="@(()=>SelectPacket(1+menu.packageIndex))" class="card" style="width: 18.5rem; background-color: #F1F1F1; margin-left: 1rem; cursor: pointer;" id="myBtn2">
                                        <h4 class="card-header" style="font-weight: bold; color: red;">@menuVarianName[1 + menu.packageIndex]</h4>
                                        <div class="row">
                                            <div class="col-md-6" style="display: flex;">
                                                <p class="card-header nominal-kuota">@menuViewDataAllNet[1 + menu.packageIndex]</p>
                                                <p class="card-header giga-bytes">@menuSatuanDataAllNet[1 + menu.packageIndex]</p>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="card-header detail-1">&nbsp;<br>&nbsp;</div>
                                                <div class="card-header detail-2">Kuota Telepon dan SMS</div>
                                            </div>
                                        </div>
                                        <div class="card-body" style="background-color: white; border-radius: 8px;">
                                            <h3 class="card-title" style="font-weight: bold; text-align: center; color: red;">Rp @int.Parse(menuNominal[1]).ToString("N0")</h3>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="form-group" style="display: flex; margin-top: -3rem;">
                                @if (menuEnabled[2 + menu.packageIndex])
                                {
                                    <div class="card" @onclick="@(()=>SelectPacket(2+ menu.packageIndex))" style="width: 18.5rem; background-color: #F1F1F1; cursor: pointer;" id="myBtn">
                                        <h4 class="card-header" style="font-weight: bold; color: red;">@menuVarianName[2 + menu.packageIndex]</h4>
                                        <div class="row">
                                            <div class="col-md-6" style="display: flex;">
                                                <p class="card-header nominal-kuota">@menuViewDataAllNet[2 + menu.packageIndex]</p>
                                                <p class="card-header giga-bytes">@menuSatuanDataAllNet[2 + menu.packageIndex]</p>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="card-header detail-1">&nbsp;<br>&nbsp;</div>
                                                <div class="card-header detail-2">Kuota Telepon dan SMS</div>
                                            </div>
                                        </div>
                                        <div class="card-body" style="background-color: white; border-radius: 8px;">
                                            <h3 class="card-title" style="font-weight: bold; text-align: center; color: red;">Rp @int.Parse(menuNominal[2 + menu.packageIndex]).ToString("N0")</h3>
                                        </div>
                                    </div>
                                }
                                @if (menuEnabled[3 + menu.packageIndex])
                                {
                                    <div class="card" @onclick="@(()=>SelectPacket(3+ menu.packageIndex))" style="width: 18.5rem; background-color: #F1F1F1; margin-left: 1rem; cursor: pointer;" id="myBtn2">
                                        <h4 class="card-header" style="font-weight: bold; color: red;">@menuVarianName[3 + menu.packageIndex]</h4>
                                        <div class="row">
                                            <div class="col-md-6" style="display: flex;">
                                                <p class="card-header nominal-kuota">@menuViewDataAllNet[3 + menu.packageIndex]</p>
                                                <p class="card-header giga-bytes">@menuSatuanDataAllNet[3 + menu.packageIndex]</p>
                                            </div>
                                            <div class="col-md-6">
                                                @*<div class="card-header detail-1">@menuEntertainment[3] GB<br>Lainnya</div>*@
                                                <div class="card-header detail-1">&nbsp;<br>&nbsp;</div>
                                                <div class="card-header detail-2">Kuota Telepon dan SMS</div>
                                            </div>
                                        </div>
                                        <div class="card-body" style="background-color: white; border-radius: 8px;">
                                            <h3 class="card-title" style="font-weight: bold; text-align: center; color: red;">Rp @int.Parse(menuNominal[3 + menu.packageIndex]).ToString("N0")</h3>
                                        </div>
                                    </div>
                                }
                            </div>
                            @if (menu.psbIndex > 4)
                            {
                                <div class="form-group" style="display: flex;">
                                    <button class="btn btn-danger btn-right3" style="width:100%;" @onclick="NextIndex" id="btn-ok" value="">Pilihan Berikutnya</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- <div class="centered">Silakan Tekan Menu yang Anda Inginkan</div> -->
    <footer>
        <div class="footer-side1">
            <span class="dot2">1</span>
            <span class="dot2">2</span>
            <span class="dot2" id="dot-active">3</span>
            <span class="dot2">4</span>
            <span class="dot2">5</span>
            <span class="dot2">6</span>
            <span class="dot2">7</span>
            <span class="dot2">8</span>
            <span class="dot2">9</span>
        </div>
        <div class="footer-side2">
            <button @onclick="Back" class="btn-arrow btn" value="">Kembali</button>
            <button @onclick="MainMenu" class="btn-arrow btn" value="">Menu Utama</button>
            <!-- <sup>Powered By </sup>Trilogi Persada -->
        </div>
    </footer>
</div>
@if (isTimeOut)
{
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p class="text-body"><span style="font-weight: bold;">Sesi Anda akan segera berakhir.</span><br />Anda akan keluar dari sistem dalam <span style="font-weight: bold;"></span> detik.</p>
                    <button class="btn btn-danger modal-button">OK</button>
                    <!-- <button class="btn btn-light modal-button">Tidak</button> -->
                </div>
            </div>
        </div>

    </div>
}
@if (isSelected)
{
    <div id="15gb" class="modal2">
        <div class="modal-dialog-centered" role="document">
            <div class="modal-nps">
                <!-- <div class="modal-header">
                  <span class="close">&times;</span>
                </div> -->
                <div class="modal-body" style="color: black;">
                    <p class="text-header2">Rp @int.Parse(menuNominal[paramMenu]).ToString("N0")/bulan (@menuVarianName[paramMenu])</p>
                    <div class="col-md-12" style="margin-top: 3%; height: 37px; display: flex;">
                        <div class="col-md-1" style="border-bottom: 1px solid #eeeeee; padding-left:0px">
                            <img src="../../assets/image/icon_internet.png" style="width: 85%;">
                        </div>
                        <div class="col-md-6" style="text-align: left; border-bottom: 1px solid #eeeeee;">
                            <b class="teks-pop" style="font-size: 23px; font-weight: bold;">Data All Net</b>
                        </div>
                        <div class="col-md-5 teks-bold" style="text-align: right; border-bottom: 1px solid #eeeeee;">
                            <p>@menuDataAllNet[paramMenu]</p>
                        </div>
                    </div>
                    <div class="col-md-12" style="margin-top: 3%; height: 37px; display: flex;">
                        <div class="col-md-1" style="border-bottom: 1px solid #eeeeee; padding-left:0px">
                            <img src="../../assets/image/icon_internet.png" style="width: 85%;">
                        </div>
                        <div class="col-md-6" style="text-align: left; border-bottom: 1px solid #eeeeee;">
                            <b class="teks-pop" style="font-size: 23px; font-weight: bold;">Data Roaming</b>
                        </div>
                        <div class="col-md-5 teks-bold" style="text-align: right; border-bottom: 1px solid #eeeeee;">
                            <p>@menuDataRoaming[paramMenu]@menuSatuanDataAllRoaming[paramMenu]</p>
                        </div>
                    </div>

                    <div class="col-md-12" style="margin-top: 3%; height: 40px; display: flex;">
                        <div class="col-md-1" style="border-bottom: 1px solid #eeeeee;padding-left: 0px">
                            <img src="../../assets/image/icon_internet.png" style="width: 85%;">
                        </div>
                        <div class="col-md-9" style="text-align: left;  border-bottom: 1px solid #eeeeee;">
                            <b class="teks-pop" style="font-size: 23px; font-weight: bold;">Data Content</b>
                            <p style="font-size: 12px; line-height: 15px; font-style: italic; margin-right: -1rem;">
                                @menuDataContent[paramMenu]
                            </p>
                        </div>
                        <div class="col-md-2 teks-bold" style="text-align: right;  border-bottom: 1px solid #eeeeee;">

                        </div>
                    </div>

                    @if (menuDataSubscription[paramMenu] != "-")
                    {
                        <div class="col-md-12" style="margin-top: 3%; height: 40px; display: flex;">
                            <div class="col-md-1" style="border-bottom: 1px solid #eeeeee;padding-left: 0px">
                                <img src="../../assets/image/icon_internet.png" style="width: 85%;">
                            </div>
                            <div class="col-md-9" style="text-align: left;  border-bottom: 1px solid #eeeeee;">
                                <b class="teks-pop" style="font-size: 23px; font-weight: bold;">Data Subscription</b>
                                <p style="font-size: 12px; line-height: 15px; font-style: italic; margin-right: -1rem;">
                                    @menuDataSubscription[paramMenu]
                                </p>
                            </div>
                            <div class="col-md-2 teks-bold" style="text-align: right;  border-bottom: 1px solid #eeeeee;">

                            </div>
                        </div>
                    }
                    <div class="col-md-12" style="margin-top: 3%; height: 37px; display: flex;">
                        <div class="col-md-1" style="border-bottom: 1px solid #eeeeee;padding-left: 0px">
                            <img src="../../assets/image/icon_telepon.png" style="width: 85%;">
                        </div>
                        <div class="col-md-8" style="text-align: left;  border-bottom: 1px solid #eeeeee;">
                            <b class="teks-pop" style="font-size: 23px;  font-weight: bold;">Telepon</b>
                        </div>
                        <div class="col-md-3 teks-bold" style="text-align: right;  border-bottom: 1px solid #eeeeee;">
                            <p>@menuTelp[paramMenu]Menit</p>
                        </div>
                    </div>

                    <div class="col-md-12" style="margin-top: 3%; height: 37px; display: flex; border-bottom: 1px solid #eeeeee;">
                        <div class="col-md-1" style="padding-left: 0px">
                            <img src="../../assets/image/icon_SMS.png" style="width: 85%;">
                        </div>
                        <div class="col-md-6" style="text-align: left;">
                            <b class="teks-pop" style="font-size: 23px; font-weight: bold;">SMS</b>
                        </div>
                        <div class="col-md-5 teks-bold" style="text-align: right;">
                            <p>@menuSMS[paramMenu]SMS</p>
                        </div>
                    </div>

                    <div class="col-md-12" style="margin-top: 3%; height: 37px; display: flex; color: red;">
                        <div class="col-md-7" style="text-align: left;">
                            <b class="teks-pop" style="font-size: 23px; margin-left: -1rem; font-weight: bold;">Rp Pembayaran di Muka</b>
                        </div>
                        <div class="col-md-5 teks-bold" style="text-align: right;">
                            <p>Rp @int.Parse(menuHargaAwal[paramMenu]).ToString("N0")</p>
                        </div>
                    </div>

                    <button class="btn btn-danger button-nps" value="" @onclick="OK">Lanjut</button>
                    <button class="btn btn-light modal-button" @onclick="@(()=>isSelected=false)" value="" style="width:100%; height:70px;">Batal</button>
                </div>
            </div>
        </div>
    </div>
}
@if (isLoading)
{
    <div id="myModal" class="modal" style="z-index:999;">
        <div class="modal-blank">
            <img class="lds-spinner" src="../../assets/image/loader.gif">
            <p><br>Mohon tunggu</p>
            <p>proses sedang berlangsung...</p>
        </div>
    </div>
}
@if (isIdle)
{
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <p class="text-body">
                        Apakah Anda ingin menambah waktu lagi? <br />
                        Anda akan keluar secara otomatis dalam waktu<span style="font-weight:bold;"> @secondCTime</span> detik.
                    </p>
                    <button class="btn btn-danger modal-button" @onclick="@(() => InvokeAsync(TambahWaktu))">Ya</button>
                    <button class="btn btn-light modal-button" @onclick="@(()=>secondCTime=0)">Tidak</button>
                </div>
            </div>
        </div>
    </div>
}
@code
{
    private string[] menuPoolName = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuHeader = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuInternet = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuEntertainment = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuTelpTsel = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuTelpLain = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuSMSTsel = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuNominal = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuHargaAwal = { "", "", "", "", "", "", "", "", "", "" };

    private string[] menuPackageName = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuOfferId = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuBid = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuOfferName = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuVarianName = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuDataAllNet = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuSatuanDataAllNet = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuDataRoaming = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuSatuanDataAllRoaming = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuDataContent = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuVoiceSms = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuTelp = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuSMS = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuDataSubscription = { "", "", "", "", "", "", "", "", "", "" };
    private string[] menuViewDataAllNet = { "", "", "", "", "", "", "", "", "", "" };

    private bool[] menuEnabled = { false, false, false, false, false, false, false, false, false, false };

    private bool isSelected = false;
    private bool isLoading = false;

    private int paramMenu = 0;
    private int pageIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        PopulateMenu();
    }
    private void NextIndex()
    {
        if (menu.packageIndex + 4 < menu._menuPSB.Count())
        {
            menu.packageIndex += 4;
            //PopulateMenu();
            StateHasChanged();
        }
        else
        {
            menu.packageIndex = 0;
            StateHasChanged();
        }

    }
    private async Task OK()
    {
        isLoading = true;
        await Task.Delay(500);
        trans.psbDetail.selectedPaket = menuPoolName[paramMenu];
        //trans.psbDetail.selectedBuCode = menuBid[paramMenu];
        foreach (var pp in menu._menuPSB)
        {
            if (trans.psbDetail.selectedPaket == pp._poolName)
            {
                trans.psbDetail.PaketPSB = pp;
                int tempBatasPemakaian = int.Parse(trans.psbDetail.PaketPSB._harga);
                trans.psbDetail.batasPemakaian = (tempBatasPemakaian * 2).ToString();
                break;
            }
        }
        trans.AddTrail("CHOOSE PACKAGE", "Package ID : " + trans.psbDetail.selectedPaket, "00");
        NavigateTo("/PSB/3b");
    }
    private void NavigateTo(string strURL)
    {
        NavMan.NavigateTo(strURL);
    }
    private void SelectPacket(int _index)
    {
        paramMenu = _index;
        isSelected = true;
    }
    private void PopulateMenu()
    {
        for (int i = 0; i < menu._menuPSB.Count(); i++)
        {
            menuPoolName[i] = menu._menuPSB[i]._poolName;
            menuHeader[i] = menu._menuPSB[i]._packageName;
            //menuInternet[i] = menu._menuPSB[i]._internet;
            //menuEntertainment[i] = menu._menuPSB[i]._entertainment;
            //menuTelpTsel[i] = menu._menuPSB[i]._telpTsel;
            //menuTelpLain[i] = menu._menuPSB[i]._telpLain;
            //menuSMSTsel[i] = menu._menuPSB[i]._smsTsel;
            menuNominal[i] = menu._menuPSB[i]._harga;
            menuHargaAwal[i] = menu._menuPSB[i]._hargaAwal;

            menuOfferId[i] = menu._menuPSB[i]._offerId;
            menuBid[i] = menu._menuPSB[i]._bid;
            menuOfferName[i] = menu._menuPSB[i]._offerName;
            menuVarianName[i] = menu._menuPSB[i]._varianName;
            menuDataAllNet[i] = menu._menuPSB[i]._dataAllnet;
            menuSatuanDataAllNet[i] = menu._menuPSB[i]._satuanDataAllnet;
            menuDataRoaming[i] = menu._menuPSB[i]._dataRoaming;
            menuSatuanDataAllRoaming[i] = menu._menuPSB[i]._satuanDataRoaming;
            menuDataContent[i] = menu._menuPSB[i]._dataContent;
            menuVoiceSms[i] = menu._menuPSB[i]._voiceSms;
            menuViewDataAllNet[i] = menu._menuPSB[i]._viewDataAllNet;
            menuTelp[i] = menuVoiceSms[i].Substring(0, menuVoiceSms[i].IndexOf("minutes") - 1);
            menuSMS[i] = menuVoiceSms[i].Substring(menuVoiceSms[i].IndexOf("+") + 2, menuVoiceSms[i].IndexOf("SMS") - menuVoiceSms[i].IndexOf("+") - 3);
            menuDataSubscription[i] = menu._menuPSB[i]._dataSubscription;

            menuEnabled[i] = true;
        }
    }
    private async Task MainMenu()
    {
        isLoading = true;
        trans.AddTrail("CHOOSE PACKAGE", "BACK TO MAIN MENU", "02");
        trans.status = "02";
        await OurUtility.AuditTrailPSB(trans, menu, cst);
        NavMan.NavigateTo("/main");
    }
    private async Task Back()
    {
        NavMan.NavigateTo("/PSB/1b");
    }

    protected override async Task OnAfterRenderAsync(bool bFirstRender)
    {
        if (bFirstRender)
        {
            #region AfterRenderTimeOut
            Task.Run(() => DoubleTimeOut()).ConfigureAwait(false);
            #endregion
        }
    }
    #region TimeOut
    private int counterTime;
    private int counterTreshold = 60;
    private bool isIdle = false;
    private bool isNotIdle = true;
    private async Task IdleTime()
    {
        do
        {
            await Task.Delay(1000);
            //Console.WriteLine("Idle 2 Time Left : " + counterTime.ToString());
            counterTime = counterTime - 1;
            InvokeAsync(StateHasChanged);
            if (counterTime < 1)
            {
                isIdle = true;
                isNotIdle = false;
                secondCTime = counterTreshold;
                InvokeAsync(StateHasChanged);
                return;
            }
        } while (isNotIdle);
    }
    #endregion

    #region SecondTimeOut
    private int secondCTime;
    private bool isTimeOut = false;

    private async Task TimeOut()
    {
        do
        {
            await Task.Delay(1000);
            //Console.WriteLine("Time 2 Out Left : " + secondCTime.ToString());
            secondCTime = secondCTime - 1;
            InvokeAsync(StateHasChanged);
            if (secondCTime < 0)
            {
                isIdle = false;
                isTimeOut = true;
                InvokeAsync(StateHasChanged);
                return;
            }
        } while (isIdle);
    }

    private async Task TambahWaktu()
    {
        //Console.WriteLine("Tambah Waktu");
        counterTime = counterTreshold;
        //secondCTime = 0;
        isIdle = false;
        isTimeOut = false;
        isNotIdle = true;
        await Task.Run(() => DoubleTimeOut()).ConfigureAwait(false);
    }

    private async Task DoubleTimeOut()
    {
        await Task.Run(() => IdleTime()).ConfigureAwait(false);
        if (isIdle)
            await Task.Run(() => TimeOut()).ConfigureAwait(false);

        if (isTimeOut)
        {
            //Console.WriteLine("Time Out 2");
            //NavigateTo("/main");
            await MenuUtamaCanceled();
        }
    }

    private async Task ResetTimer()
    {
        if (!isIdle)
        {
            //Console.WriteLine("Timer Reset");
            counterTime = counterTreshold;
        }
    }
    #endregion

    private bool translog = true;
    private async Task MenuUtamaCanceled()
    {
        if (translog)
        {
            translog = false;
            InvokeAsync(StateHasChanged);
            isNotIdle = false;
            NavigateTo("/main");
        }
    }
}
