@page "/PSB/3c"

@using MyG5Blazor.Data
@using System.Linq;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using System;
@using System.Threading.Tasks;
@using System.Net.Http;

@inject Costumer cst
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavMan
@inject Menu menu
@inject Transaction trans
@inject Config config
<div class="main-panel bg-home">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
        <div class="container-fluid">
            <div class="navbar-wrapper">
                <div class="logo">
                    <img src="../../assets/image/Logo/Logo_MyGraPARI.png" />
                </div>
                <!-- <a class="navbar-brand" href="javascript:;">Dashboard</a> -->
            </div>
        </div>
    </nav>
    <!-- End Navbar -->

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <p class="teks-title">Berlangganan KartuHALO</p>
                    <div class="teks-top">
                        <p>Silakan Pilih Nomor KartuHalo yang Anda Inginkan</p> <br>
                        <p>Masukkan 4 Digit Nomor untuk Memudahkan Proses Pencarian</p> <br>
                        <p class="teks-bold">Anda dapat Melakukan Pencarian<br>Nomor hingga 3x</p> <br>
                        <p class="teks-bold">Berikut adalah Nomor Pilihan yang Tersedia di MyGraPARI</p> <br>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="text-primary">
                        <input type="text" name="number" placeholder="Contoh : 4444" class="num-field" maxlength="4" @bind="strNumber" readonly>
                    </div>
                    <div class="" style="text-align: center; margin-top: 5%;">
                        @if (menu.psbIndex > 6)
                        {
                            <button class="btn btn-danger btn-right3" @onclick="NextIndex" id="btn-ok" value="">Pilihan Berikutnya</button>
                        }
                    </div>
                    <div style="display: flex; text-align: center; margin-top: 5%;">
                        @for (int i = menu.pageIndex; i < menu.pageIndex + 2; i++)
                        {
                            @if (i == 0 || i == 6 || i == 12)
                            {
                                <button @onclick="@(()=> PickNomer(populateNumber[0]))" class="btn-pilih-no btn" value="">@populateNumber[0]</button>
                            }
                            @if (i == 1 || i == 7 || i == 13)
                            {
                                <button @onclick="@(()=> PickNomer(populateNumber[1]))" class="btn-pilih-no btn" style="margin-left: 3%;" value="">@populateNumber[1]</button>
                            }
                        }
                    </div>
                    <div style="display: flex; text-align: center; margin-top: 4%;">
                        @for (int i = menu.pageIndex + 2; i < menu.pageIndex + 4; i++)
                        {
                            @if (i == 2 || i == 8 || i == 14)
                            {
                                <button @onclick="@(()=> PickNomer(populateNumber[2]))" class="btn-pilih-no btn" value="">@populateNumber[2]</button>
                            }
                            @if (i == 3 || i == 9 || i == 15)
                            {
                                <button @onclick="@(()=> PickNomer(populateNumber[3]))" class="btn-pilih-no btn" style="margin-left: 3%;" value="">@populateNumber[3]</button>
                            }
                        }
                    </div>
                    <div style="display: flex; text-align: center; margin-top: 4%;">
                        @for (int i = menu.pageIndex + 4; i < menu.pageIndex + 6; i++)
                        {
                            @if (i == 4 || i == 10 || i == 16)
                            {
                                <button @onclick="@(()=> PickNomer(@populateNumber[4]))" class="btn-pilih-no btn" value="">@populateNumber[4]</button>
                            }
                            @if (i == 5 || i == 11 || i == 17)
                            {
                                <button @onclick="@(()=> PickNomer(populateNumber[5]))" class="btn-pilih-no btn" style="margin-left: 3%;" value="">@populateNumber[5]</button>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- <div class="centered">Silakan Tekan Menu yang Anda Inginkan</div> -->
<footer>
    <div class="footer-side1">
        <span class="dot2">1</span>
        <span class="dot2">2</span>
        <span class="dot2" id="dot-active">3</span>
        <span class="dot2">4</span>
        <span class="dot2">5</span>
        <span class="dot2">6</span>
        <span class="dot2">7</span>
        <span class="dot2">8</span>
        <span class="dot2">9</span>
    </div>
    <div class="footer-side2">
        <button @onclick="@(()=>NavigateTo("/PSB/3b"))" class="btn-arrow btn" value="">Kembali</button>
        <button @onclick="MainMenu" class="btn-arrow btn" value="">Menu Utama</button>
        <!-- <sup>Powered By </sup>Trilogi Persada -->
    </div>
</footer>
@if (isLoading)
{
    <div id="myModal" class="modal">
        <div class="modal-blank">
            <img class="lds-spinner" src="../../assets/image/loader.gif">
            <p><br>Mohon tunggu</p>
            <p>proses sedang berlangsung...</p>
        </div>
    </div>
}
@code
{
    private bool IsMethod = false;
    private bool IsVisible = false;
    private bool IsInvalid = false;
    private bool isLoading = false;
    private bool isSubmit = true;
    private bool isPopUp = false;

    private string strNumber = string.Empty;
    private string[] inputNumber;
    private string _myURL = string.Empty;
    private string reserveNumberService = "psb-halo/v1/reserve-number";
    private string strMsgError = string.Empty;

    private string[] populateNumber = { "", "", "", "", "", "" };
    private int pageIndex = 0;
    private int inputIndex = 0;

    private void NextIndex()
    {
        if (menu.pageIndex + 6 < menu.psbNomer.Count())
        {
            menu.pageIndex += 6;
            PopulateNumber();
        }
        else
        {
            menu.pageIndex = 0;
            PopulateNumber();
        }

    }

    private void PopulateNumber()
    {
        for(int i=0;i<6;i++)
        {
            populateNumber[i] = menu.psbNomer[i + menu.pageIndex];
            StateHasChanged();
        }
    }
    private void SetPaymentMethod(int _intMPembayaran)
    {
        if (!IsMethod)
        {
            cst.intMPembayaran = _intMPembayaran;
            trans.intPayment = _intMPembayaran;
            trans.AddTrail("PAYMENT METHOD", cst.strMPembayaran, "00");
            IsMethod = true;
        }
    }

    private async Task PickNomer(string _nomer)
    {
        trans.psbDetail.selectedNumber = _nomer;
        await ReserveNumber();
    }

    private async Task MainMenu()
    {
        trans.AddTrail("CHOOSE NUMBER", "BACK TO MAIN MENU", "02");
        trans.status = "02";
        await OurUtility.AuditTrailPSB(trans, menu, cst);
        NavMan.NavigateTo("/main");
    }
    //private void PopulateNumber()
    //{
    //    inputNumber = new string[menu.psbNomer.Count()];
    //    for (int i = 0; i < menu.psbNomer.Count(); i++)
    //    {
    //        inputNumber[i] = menu.psbNomer[i];
    //    }
    //}
    private void NavigateTo(string strURL)
    {
        NavMan.NavigateTo(strURL);
    }
    protected override async Task OnInitializedAsync()
    {
        _myURL = config.Read("URL", Config.PARAM_DEFAULT_URL);
        strNumber = trans.psbDetail.patternNumber;
        PopulateNumber();
    }
    private async Task ReserveNumber()
    {
        isLoading = true;
        await Task.Delay(5000);
        string myJson = "{ \"terminalId\": \"" + menu.terminalId + "\"," +
            "\"transactionId\": \"" + trans.transID + "\"," +
            "\"buCode\": \"" + trans.psbDetail.PaketPSB._buCode + "\"," +
            "\"noHp\": \"" + trans.psbDetail.selectedNumber + "\"" +
               "}";
        string myURL = _myURL + reserveNumberService;
        OurUtility.Write_Log("Reserve Number", "step-action");
        OurUtility.Write_Log("== Request API : " + myJson, "step-action");
        string strResult = await OurUtility.PostCallAPI(myURL, myJson, menu);
        OurUtility.Write_Log("== Response API : " + strResult, "step-action");

        if (strResult != "" && strResult != "Forbidden" && strResult != "NotFound" &&
        strResult != "BadRequest" && strResult != "InternalServerError")
        {
            try
            {
                JObject jobjResult = JObject.Parse(strResult);
                if ((string)jobjResult["transaction"].SelectToken("statusCode") == "00")
                {
                    trans.psbDetail.reserveId = (string)jobjResult.SelectToken("idReservation");
                    trans.AddTrail("Reserve Number", "Number : " + trans.psbDetail.selectedNumber + ", Pool : " + trans.psbDetail.selectedPaket, "00");
                    NavigateTo("/PSB/4");
                }
                else if ((string)jobjResult["transaction"].SelectToken("statusCode") == "01")
                {
                    if ((string)jobjResult["transaction"].SelectToken("errorCode") != null)
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusDesc") + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("errorCode");
                    }
                    else
                    {
                        OurUtility.Write_Log("== Status Code : " + (string)jobjResult["transaction"].SelectToken("statusCode") + " {Error}", "step-action");
                        trans.errorCode = (string)jobjResult["transaction"].SelectToken("statusCode");
                    }
                    trans.AddTrail("Reserve Number", "Number : " + trans.psbDetail.selectedNumber + ", Pool : " + trans.psbDetail.selectedPaket, "01");
                    trans.status = "01";
                    await OurUtility.AuditTrailPSB(trans, menu, cst);
                    //isNotIdle = false;
                    isLoading = false;
                    NavigateTo("/error");
                }
                else if ((string)jobjResult["transaction"].SelectToken("statusCode") == "02")
                {
                    isLoading = false;
                    strMsgError = (string)jobjResult["transaction"].SelectToken("statusDesc");
                    trans.AddTrail("Reserve Number", "Number : " + trans.psbDetail.patternNumber + ", Pool : " + trans.psbDetail.selectedPaket, "02");

                    isPopUp = false;
                    return;
                }
            }
            catch (Exception ex)
            {
                isLoading = false;
                trans.AddTrail("Reserve Number", "Exception Error ", "01");
                trans.status = "01";
                await OurUtility.AuditTrailPSB(trans, menu, cst);

                trans.errorCode = "Exception Error";
                OurUtility.Write_Log("== Error : " + ex.Message, "step-action");
                //isNotIdle = false;
                NavMan.NavigateTo("/error");
            }
        }
        else
        {
            isLoading = false;
            trans.AddTrail("Reserve Number", "Hit Webservice Error {" + strResult+"}", "01");
            trans.status = "01";
            await OurUtility.AuditTrailPSB(trans, menu, cst);

            trans.errorCode = "Hit Webservice Error {" + strResult+"}";
            OurUtility.Write_Log("== Hit Webservice Error {" + strResult+"}", "step-action");
            //isNotIdle = false;
            NavMan.NavigateTo("/error");
        }
    }
}
